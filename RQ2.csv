App,FP,Note,Type of change (merged by both author),Version,commit,TestFilePath,ProductionFilePath,Maintenance Label,What Initially Motivated the Commit?,Do Developers Remove Smell due to Awareness?,How is the smell removed,known RF Found for removing smell,does refactoring align with main motivation? Or is it byNAproduct?,Assertion Roulette,Conditional Test Logic,Constructor Initialization,Default Test,EmptyTest,Exception Catching Throwing,General Fixture,Mystery Guest,Print Statement,Redundant Assertion,Sensitive Equality,Verbose Test,Sleepy Test,Eager Test,Lazy Test,Duplicate Assert,Unknown Test,IgnoredTest,Resource Optimism,Magic Number Test
groovy,-,test written for incomplete code,CUT,src,e21d6226b9a4cc411fb0e7d24cf7b6023edc9002,\groovy\src\test\groovy\security\SecurityTest.java,NA,bug [ fix insufficient implementation (not working well) ],"ensure groovy script has proper permission prior to run. To do this, Abstract securitytestsupport class on securitytest.java must check whether permission is granted [new feature]",FALSE,"[Conditional Test Logic] } notyetimplemented() is used in conditional statement to prevent test from executing. However, test code gets deleted rather than adding implementation. [Ignore] Was initially placed on the entire class because the test class was not working. However, removed after fxing test",-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
groovy,-,refactor test code [delete print and replace with assertion],RFT [ Replace print with Assertion ],src,E:\testSmellResearch\repo\groovy\src\test\org\codehaus\groovy\runtime\MethodFailureTest.java,\groovy\src\test\org\codehaus\groovy\runtime\MethodFailureTest.java,NA,refactor test,developer notices that all test had print statement rather than assertions [refactor],TRUE,replaced all print statement with assertion,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
groovy,-,delete test code while intention to is to refactor test code,D-W-RFT,src,0eb78550969677add05ee98a03be3b40537007ca,\groovy\src\test\java\org\apache\groovy\util\concurrentlinkedhashmap\ConcurrentLinkedHashMapTest.java,\groovy\src\main\java\org\apache\groovy\util\concurrentlinkedhashmap\ConcurrentLinkedHashMap.java,refactor test,refactoring test [clean code],FALSE,"deletes thread.sleep, but intention is not clear [do not discuss]",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
kafka,-,refactor test while fixing a bug,RFT-W-BF,streams,f9865d52e81bbdddb7889d6c3cc7be537e610826,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\ResetIntegrationTest.java,NA,bug fixing [ missing feature ],"StreamsResetter class is not configuriable. Thus, adds a new argument to every method in the class [bug][however, test smell removed here is not related to main intention of the commit] [by-product]",FALSE,Refactoring [SMELL PERSISTS],"EXTRACT SUPERCLASS, PULLL UP",FALSE [General Maintenance Task],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,removed test case due to change in feature improvement,D-W-FI,streams,1dd85a328f437643a5c135f242c644f47c3767e4,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\WindowsTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\Windows.java,feature improvement,restructure code to favour immutable implementation,FALSE,deletes method because user does not have access to API to set grace period [OBSOLETE],-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,removed test case due to change in feature improvement,D-W-FI,streams,b3771ba22acad7870e38ff7f58820c5b50946787,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\TimeWindowsTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\TimeWindows.java,feature improvement,deprecate,FALSE,Deletes the code because shouldn't override if unused [UNUSED],-,NA,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor/add test while adding new feature/improvement,RFT-W-FA,tools,832b096f4fcfde9e90d796470eb0ce2a26283e81,\kafka\tools\src\test\java\org\apache\kafka\trogdor\agent\AgentTest.java,\kafka\tools\src\main\java\org\apache\kafka\trogdor\agent\Agent.java,feature improvement,improve agent.java to destroy records,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
kafka,-,removed test case while fixing bug,RM-W-BF,streams,b1aa1912f08765d9914e3d036deee6b71ea009dd,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\WindowedStreamPartitionerTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\WindowedStreamPartitioner.java,bug fixing [ expose feature to public ],expose API to public,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
kafka,-,refactor test cases after a bug fix,RFT-A-FA,streams,7ebc5da606fb806bde8b7176fed0e60243e0f7f3,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\SessionKeySerdeTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\SessionKeySerde.java,new feature,"introduces a new feature, thus adds a new unit test, followed by refactoring.",TRUE,"replaces magic number with variable, which is more readable",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
kafka,-,refactor test cases,RFT [ exception ],streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\state\internals\MergedSortedCacheWrappedWindowStoreKeyValueIteratorTest.java,NA,refactor test [related to exception handling],"""Now instead of just generic `Exception` methods declare more concrete
  exceptions throwing or don't declare any throwing at all, if not needed.""",TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,removed test case due to feature improvement,D-W-FI,connect,11afff09908035166febf9b75c410112693ff98c,\kafka\connect\runtime\src\test\java\org\apache\kafka\connect\runtime\ConnectMetricsTest.java,NA,feature improvement,feature improvement to use new feature added previously,FALSE,deletes the method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
kafka,-,refactor test cases [improvement] after a bug fix [follow up],RFT-A-BF,streams,724cddbc56fec227727db4caf75c77adb62438e6,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\ResetIntegrationTest.java,NA,improvement,"Fixing Bug caused by test failure to use a method prior to execution of current method. The method is originally in setup, but moved to other methods that require it for test pass.",FALSE,"since a method in setup is required to be executed in test method to pass a test, it moves the method there",-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test cases after a bug fix,RFT-A-BF,streams,125d69caee993710bc07523fdd3deb0e06b10636,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KStreamMapTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KStreamMap.java,feature improvement after fixing a bug,code clean [ remove hacky reflection in test ] up after fixing a bug [ api exposes too much of private method that should not be made public ],TRUE,deletes throw,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test case prior to feature addition,RFT-P-FA,streams,ec9e4eafa406fec897713310bafdedf6bbb3c0c5,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KTableKTableJoinTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KTableKTableJoin.java,feature improvement,implementing new feature requires new tests. Writing new tests required refactoring of original test for ease of extension,FALSE,Refactoring [SMELL PERSISTS],EXTRACT METHOD,TRUE,1,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,1
kafka,-,refactor test cases,RFT,streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KStreamKTableLeftJoinTest.java,NA,refactor test [related to exception handling],"""Now instead of just generic `Exception` methods declare more concrete
  exceptions throwing or don't declare any throwing at all, if not needed.""",TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor/delete test while fixing a bug,D-W-BF,streams,cae42215b7597cc39afc682cb0399782cf42fe23,\kafka\streams\src\test\java\org\apache\kafka\streams\processor\internals\assignment\SubscriptionInfoTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\processor\internals\assignment\SubscriptionInfo.java,bug [associated with rolling release conflict in versions],change implementation test while fixing abug,FALSE,deletes code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,FP,-,-,streams,86de2dfd27f96dd3fea0635ad110c63bc639c721,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\GlobalThreadShutDownOrderTest.java,NA,code clean up,General Code clean up,-,-,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test while fixing bug,RFT-W-BF,streams,86de4a86b87c1b45732303c07d263e317ffd0ebf,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KStreamKTableJoinTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KStreamKTableJoin.java,bug fixing [ handling of null object ],"implementing to allow kstream-ktable join to return null to indicate no valid key exists for join operation. Without this, null value will crash kafka",FALSE,"Refactoring [SMELL PERSISTS], but not detected by RF Miner since its extract method and adds new function. Moreover, the condional loop was used to put 2 topic into kafka stream. This occurs a lot for many tests. Thus, it is extracted into its own method with a argument deciding how many topics to initialize",EXTRACT METHOD and new function [dirty],FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,add test case due while adding new feature,AT-W-FA,clients,7d6ca52a2751908c7fc6b752d70dfaaaaa9bbe8c,\kafka\clients\src\test\java\org\apache\kafka\common\metrics\JmxReporterTest.java,\kafka\clients\src\main\java\org\apache\kafka\common\metrics\JmxReporter.java,bug fixing [ delete unnecessary implementation ] while adding new feature,"JMXReporter.java includes logic for sanitizing client I, but developer discusses that it's better to fail than to sanitize. Thus, include more logic in the test method to test for behavior (prior to this task, dev does not know it doesn't have any logic)",FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
kafka,-,refactoring test cases,RFT,clients,b8651d4e82d45463d2c71798bd5852f8a605b440,\kafka\clients\src\test\java\org\apache\kafka\common\utils\MockTimeTest.java,NA,Code Clean Up,"general Code clean up [ Cleanup involves
 * Removing redundant code
 * Fixing typos
 * Simplifying code when possible
 * Refactoring to use Java 8 constructs when possible]",TRUE,-,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test case while feature improvement,RFT-W-FI,clients,3b5d88febb186c4b92cc514fa2338de7bc338f67,\kafka\clients\src\test\java\org\apache\kafka\common\security\authenticator\SaslServerAuthenticatorTest.java,\kafka\clients\src\main\java\org\apache\kafka\common\security\authenticator\SaslServerAuthenticator.java,change implementation during feature improvement,"feature improvement followed by refactoinrg test code [instead of calling production method 2 times, it combines the two methods]",FALSE,move authenticator.configure into authenticator.authenticate() [refactoring?],-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
kafka,-,refactor test cases,RFT,clients,0b3989fd72acc6e989c495c63cb8ca6aa5850811,\kafka\clients\src\test\java\org\apache\kafka\common\acl\AclBindingTest.java,\kafka\clients\src\main\java\org\apache\kafka\common\acl\AclBinding.java,refactor test while adding new feature,refactor test / adds additional test while implementing new feature,TRUE [removes unused throws],removes throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test cases,RFT,connect,8abbf33b5978b93354ae35c5e21c474816c9cc76,\kafka\connect\runtime\src\test\java\org\apache\kafka\connect\runtime\WorkerConfigTransformerTest.java,\kafka\connect\runtime\src\main\java\org\apache\kafka\connect\runtime\WorkerConfigTransformer.java,refactor test,clean up test code,TRUE,removed throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,-,RFT,streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\processor\internals\assignment\ClientStateTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\processor\internals\assignment\ClientState.java,refactor test [related to exception handling],-,TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,FP,-,-,streams,3991d81f6c645bdf36c58e3d56b829ff92dbff3a,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KTableImplTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KTableImpl.java,-,"code cleanup [Java8 rewrites
 removed unused classed
 remove warnings
 break long lines that are hard to read into short lines
 some code re-formatting
 JavaDoc improvements]",FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
kafka,-,remove ignore after refactor test while fixing a bug,D-A-BF,streams,2586226a9a5300fea427ca001608ad86d393df1b,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\ResetIntegrationTest.java,NA,bug fixing [fix failed test due to slow test],bug fixing transiently slow test,FALSE,remove ignore after refactoring test to fix a bug,replace thread.sleep with waitFor utilty,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
kafka,-,-,RFT,streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\state\internals\ChangeLoggingKeyValueBytesStoreTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\state\internals\ChangeLoggingKeyValueBytesStore.java,refactor test [related to exception handling],-,TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,delete test code feature improvement,D-W-FI,connect,11afff09908035166febf9b75c410112693ff98c,\kafka\connect\runtime\src\test\java\org\apache\kafka\connect\runtime\ConnectMetricsTest.java,NA,feature improvement,feature improvement,FALSE [deletes the entire method],delete entire method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
kafka,-,-,RFT,streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\state\internals\CachingSessionStoreTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\state\internals\CachingSessionStore.java,refactor test [related to exception handling],-,TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test code while fixing a bug,RFT-W-BF,clients,a8c17e36c3239f33925b061d99a5d1d1074bbc67,\kafka\clients\src\test\java\org\apache\kafka\common\record\LazyDownConversionRecordsTest.java,\kafka\clients\src\main\java\org\apache\kafka\common\record\LazyDownConversionRecords.java,bug fixing [ for better handler ],fix handling of down conversion when no valid batch exists,FALSE,Refactor [SMELL PERSISTS],Extracted a parameterized class and moved method,TRUE,0,1,1,0,0,0,0,1,0,0,0,0,0,1,0,0,0,0,`,0
kafka,FP,-,-,streams,ac9c3ed0b43ee848e6e555a01c55ea2eee78540a,\kafka\streams\src\test\java\org\apache\kafka\streams\processor\internals\StreamTaskTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\processor\internals\StreamTask.java,IMPROVEMENT/MAJOR,"General cleanup of Streams code, mostly resolving compiler warnings and re-formatting.",-,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
kafka,-,-,RFT,streams,c5464edbb7a6821e0a91a3712b1fe2fd92a22d68,\kafka\streams\src\test\java\org\apache\kafka\streams\state\internals\QueryableStoreProviderTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\state\internals\QueryableStoreProvider.java,refactor test [related to exception handling],-,TRUE,"removes throw exception because generic exception is not needed ""just a noise"" - but developer insists on enumerating exception, while other thinks it's overkill or wonder why it's needed. Thus they decide ""are you ok if we keep the cleanup but whenever we have more than one specific exception we just throw Exception.""",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,FP ,-,-,clients,3a496f480d002a4512273477eda9d92731e600c3,\kafka\clients\src\test\java\org\apache\kafka\common\network\SslTransportLayerTest.java,\kafka\clients\src\main\java\org\apache\kafka\common\network\SslTransportLayer.java,test/major,Add unit tests for SASL in the clients project using SASL/PLAIN implementation,FALSE,Refactoring,Move Class,"TRUE [the purpose of this commit is to add a unit test. Developer, refactor current test for ease of extension]",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
kafka,-,refactor test while feature improvement,RFT-W-FI,streams,bcc712b45820da74b44209857ebbf7b9d59e0ed7,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KStreamTransformValuesTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KStreamTransformValues.java,feature improvement,feature improvement [enable access to key in production code],FALSE,split some test logic and adds more code to complement feature improvement,decompose test method,TRUE,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
kafka,-,refactor test [delete thread.sleep],RFT,streams,7b7c4a7bb0fd25ddca4e4bdde9e605b3d5a1ba70,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\PassThroughIntegrationTest.java,NA,refactoring test,replace thread.sleep with waituntil condition is true because time out may not be large enough (10seconds) and will integration test will trigger prematurely even though data has not been processed,TRUE,deleted thread.sleep,Test Specific Refactoring,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
kafka,-,deletes test code & refactor test while improving feature,D/RFT-W-FI,clients,dc5bf4bd453495af050ea7c0ec7a66b8d2b2e8d4,\kafka\clients\src\test\java\org\apache\kafka\common\serialization\SerializationTest.java,NA,feature improvement [ could be useful ],"implementing a missing/useful component, which can improve performance a bit",TRUE,[exception] replaced with expected exception [duplicate] motivation allows developer to see mistakes,Test Specific Refactoring / there was also inline variable RF but not related to removing test smell,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0
kafka,-,refactor test code while improving feature,RFT-W-FI,streams,21f88a595b5785d8b9b9a17a3fb667b1712f3b61,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KStreamWindowAggregateTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\kstream\internals\KStreamWindowAggregate.java,feature improvement [ adds suppress options to current implementation ],feature improvement,FALSE,Refactoring [test smell persists],Extract Method to helper,TRUE [ ADDS ADDITIONAL LOGIC ],0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
kafka,-,deletes test code while fixing a bug [deadlock],D-W-BF,streams,b78d7ba5d58fa77b831244444eef005a62883f9b,\kafka\streams\src\test\java\org\apache\kafka\streams\processor\internals\ProcessorStateManagerTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\processor\internals\ProcessorStateManager.java,bug fixing [ deadlock ],deadlock caused by not releasing the file dir locks in task suspension.,FALSE,"deleted the entire method because of change in implementation logic. For example, processorstatemanger should not be instantiated if topology has a statestore. Thus, the throw exception test method is moved to a different class.",-,NA,0,0,0,0,0,0,0,1,0,0,0,0,-,0,0,0,0,0,0,0
kafka,-,delete test method while fixing a bug,D-W-BF,streams,64fff8bfcc9b92769640bfaa692e19d0db8861a6,\kafka\streams\src\test\java\org\apache\kafka\streams\state\StoresTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\state\Stores.java,bug fixing [ incorrect implementation ],bug fixing,FALSE,delete the entire test method,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor setup while feature improvement,RFT-W-FI,streams,de24d4a459ccfac623e71722f8df8b1e99f2ad43,\kafka\streams\src\test\java\org\apache\kafka\streams\processor\internals\StateDirectoryTest.java,\kafka\streams\src\main\java\org\apache\kafka\streams\processor\internals\StateDirectory.java,feature improvement,feature improvement,FALSE,refactoring [test smell persists],extract method from @before,TRUE [but difficult to understand code calls the same method at the @before and in each test code,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
kafka,-,refactor test (replace assert with utility) while fixing a bug,RFT-W-BF,streams,24e6423424bf0e41dc05c4a67226e92011e34968,\kafka\streams\src\test\java\org\apache\kafka\streams\integration\RegexSourceIntegrationTest.java,NA,bug fixing [ hanging test ],fix hanging test by increasing time out.,FALSE,"assertion method is moved to a utility method, which also waits for 30 seconds until a condition is recieved and asserts after or fail if not received",replace assertion with utility that asserts with additional logic,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
kafka,-,refactor test (to close file) to fix a bug (Exception),RFT-T-BF,streams,1a73629bb43bbc781e5a968a61f6079365bc75b7,\kafka\streams\src\test\java\org\apache\kafka\streams\kstream\internals\KTableImplTest.java,NA,bug fixing [ exception ],to fix an exception that may have been caused by not explicitly closing file,FALSE,"while implementing teardown for explicit closing of file, refactor test code to extract file open into @before setup (fresh fixture)",Test Specific Refactoring (Extract common logic in setup),TRUE,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0
camel,-,delete ignore after fixing a bug,D-A-BF,components,9ad6806672f69651bfa6cf7563b2c7383e2f9a7c,\camel\components\camel-ahc\src\test\java\org\apache\camel\component\ahc\AhcProduceSSLContextParametersGetTest.java,NA,improvement [ failed test from improvement in API; thus add previous version of API ],removing ignored test that failed due to API upgrade,TRUE,deletes ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,refactor test (refactor thread; perform improv.),RFT,components,722e590cbe7a1ec8fd7fec79ced9d99eceb25f03,\camel\components\camel-spring\src\test\java\org\apache\camel\spring\placeholder\SimpleLanguageWithSprinPropertyPlaceholderRouteTest.java,NA,Test Refactoring [ use awaitility to improve speed ],"Use awaitility for testing where we otherwise use thread sleep. To speed up testing. ""slightly reduce code by using additional awaitility features.""",FALSE,replaces thread sleep with awaitility,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,-,"refactor test (remove dup, delegate) [ not for test smell ]",RFT,components,fbee9c11b80bc071e082291db6a7f0818e77d9d1,\camel\components\camel-dropbox\src\test\java\org\apache\camel\component\dropbox\integration\producer\DropboxProducerGetSingleTest.java,NA,Refactor Test,Refactoring Drop box tests,FALSE,"[constructor] initially an empty constructor that throws exception, but deleted for @before [assertion roulette] the methods were Refactored, and assertion roulette was deleted",Extracted method,TRUE,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,change implementation in test code while feature improvement,CI-W-FI,camel-core,385f2cbe8e620f1f1801a6f3c633692a7e330c06,\camel\camel-core\src\test\java\org\apache\camel\processor\ValidateRegExpTest.java,NA,Feature improvement [ change implementation to hide sensitive details ],"improve test (message body shouldn't be outputted due to sensitive info, thus only output ID)",FALSE,change in test implementation,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
camel,-,refactor test (replace test with mock) [ not for test smell ],RFT,components,d5f98dc4d5b007294866905333f4b36a6f3605da,\camel\components\camel-kubernetes\src\test\java\org\apache\camel\component\kubernetes\producer\KubernetesPersistentVolumesProducerTest.java,\camel\components\camel-kubernetes\src\main\java\org\apache\camel\component\kubernetes\persistent_volumes\KubernetesPersistentVolumesProducer.java,Refactor test [ using mock ],Refactor test using mock,FALSE,[conditonal ] replaced with mock which facilitates one admin at a time [unknown test] assertion was added,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
camel,-,change in test code implementation while fixing a bug [ not for test smell ],CI-W-BF,tests,9e7714a7484f92b7e69e06a3d1d3325dcfb08a28,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelTestTest.java,NA,bug fixing [failed test due to new karaf version ],test doens't work on karaf 4 [failed test; fixing],FALSE,InstallCamelFeature is required to fix a test failure and is required in many places. This is added in this unknown method.,-,NA,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,refactor test (refactor thread; perform improv.) [ not for test smell ],RFT,camel-core,d461cf7ccbd249bd98f7731f395a65dfab66e16e,\camel\camel-core\src\test\java\org\apache\camel\component\timer\TimerRestartTest.java,NA,Test Refactoring [ use awaitility to improve speed ],using awaitility in camel-core tests when we wait via thread sleep,FALSE,removed thread.sleep,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,FP,-,-,components,00d1d70ba10f96888791c0e9d73ad044e4126884,\camel\components\camel-spring-boot\src\test\java\org\apache\camel\spring\boot\actuate\endpoint\CamelRoutesEndpointTest.java,\camel\components\camel-spring-boot\src\main\java\org\apache\camel\spring\boot\actuate\endpoint\CamelRoutesEndpoint.java,New Feature [API],add a new API,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
camel,-,delete test code (remove throws from expected) while adding new feature (developer recognizes mistake),D-W-FA,components,53d0679559106bce561aee98b0362815a80c5a70,\camel\components\camel-micrometer\src\test\java\org\apache\camel\component\micrometer\MicrometerEndpointTest.java,\camel\components\camel-micrometer\src\main\java\org\apache\camel\component\micrometer\MicrometerEndpoint.java,New Feature,adding new feature,TRUE,"developer realizes mistake that test can't throw general exception, which would fail, but also have expected exception, which should pass.",-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,delete test code (by-product) while refactoring test (decrease delay; improve test speed),D-W-RFT,components,4703172d1017009ab69fd51adce3f114d1434fcc,\camel\components\camel-mail\src\test\java\org\apache\camel\component\mail\MailRouteTest.java,NA,Test Refactoring [ Improve test speed ],decrease consumer delays to make test run faster,TRUE,deleted thread.sleep,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,-,"refactor test code (extract class; common logic [duplicate]) [ not for test smell, but rather for duplication ]",RFT [ remove duplication ],components,541114c17cd6ba1e87c644cc65a86ffc7bc48cbd,\camel\components\camel-cassandraql\src\test\java\org\apache\camel\processor\idempotent\cassandra\CassandraIdempotentRepositoryTest.java,\camel\components\camel-cassandraql\src\main\java\org\apache\camel\processor\idempotent\cassandra\CassandraIdempotentRepository.java,refactoring test code,extract superclass and pull up common code in setup,FALSE,Refactoring (smell persists),Extract superclass and pull up setup method,TRUE,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,-,D-A-FI,camel-core,b97c03070353442cb257851c37512bcdc222ee1b,\camel\camel-core\src\test\java\org\apache\camel\processor\interceptor\TraceHandlerTest.java,NA,Feature Improvement [ deprecate and replace ],deprecate for better feature,FALSE,deletes ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,-,D-A-FA,components,18a169c6534dc5730d16a564ad638572367e82d4,\camel\components\camel-spring-javaconfig\src\test\java\org\apache\camel\spring\javaconfig\test\CamelSpringDelegatingTestContextLoaderTest.java,\camel\components\camel-test-spring\src\main\java\org\apache\camel\test\spring\CamelSpringDelegatingTestContextLoader.java,Feature addition,adding new feature,FALSE [ignored for no apparent reason],deleted ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete ignore after fixing a bug,D-A-BF,components-starter,a3a21d53c1b326fe7c9e4141e3a3dc803adfed17,\camel\components-starter\camel-servlet-starter\src\test\java\org\apache\camel\component\servlet\springboot\ServletMappingAutoConfigurationTest.java,\camel\components-starter\camel-servlet-starter\src\main\java\org\apache\camel\component\servlet\springboot\ServletMappingAutoConfiguration.java,Forgot to remove ignore after bug fixing,restoring test due to failed test,TRUE [added to fix a test failure],deleted ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,refactor test [ use awaitility - improve performance] [ unawareness ],RFT [ thread ],camel-core,a757ea7d97be8a27d834bcb9e4c93d9040622c24,\camel\camel-core\src\test\java\org\apache\camel\impl\FileWatcherReloadStrategyTest.java,\camel\camel-core\src\main\java\org\apache\camel\impl\FileWatcherReloadStrategy.java,Test Refactoring [ Improve test speed ],"Use awaitility for testing where we otherwise use thread sleep. To speed up testing. ""slightly reduce code by using additional awaitility features.""",TRUE,originally uses conditional to count up to 20 seconds - but now uses watility,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,FP,-,-,camel-core,b97c03070353442cb257851c37512bcdc222ee1b,\camel\camel-core\src\test\java\org\apache\camel\processor\TraceableUnitOfWorkTest.java,NA,New Feature,adding new feature,TRUE,"developer realizes mistake that test can't throw general exception, which would fail, but also have expected exception, which should pass.",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete uneeded code while refactoring other test,D-W-RFT,components,fbee9c11b80bc071e082291db6a7f0818e77d9d1,\camel\components\camel-dropbox\src\test\java\org\apache\camel\component\dropbox\DropboxConsumerTest.java,NA,Refactor Test,Refactor Test,-,deletes constructor because it's unused,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,delete ignore after waiting for feature implementation,D-A-FA,components,d78a658e976b60c5072ab7d353569d15915e9518,\camel\components\camel-restlet\src\test\java\org\apache\camel\component\restlet\RestRestletHttpOptionsTest.java,NA,Feature Improvement [ Test Ignored original to wait for feature improvement ],Feature improvement,TRUE [was initially ignored due to lack of support],Deletes ignore [ added because it was waiting to finish feature improvement ],-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,refactor test code [ magic number ],RFT [ Magic Number ],camel-management-impl,5aabbc0ccafae6c692e8af2bcbe82f131ffff75a,\camel\camel-management-impl\src\test\java\org\apache\camel\management\ManagedNonManagedServiceTest.java,NA,Refactor Test [ Magic number ],Refactor Test [ replace magic number with variable ],TRUE,the commit is only dedicated for replacing magic number,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
camel,-,comment out ignore after bug fixing,D-A-BF,components,73bce61493c76b3a549c55c28fd6504f14ef5af2,\camel\components\camel-etcd\src\test\java\org\apache\camel\component\etcd\EtcdKeysTest.java,NA,bug fixing [ faulty implementation / not associated with test failure ],Fix a bug in test,TRUE,deletes ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete ignore after waiting a bundle,D-A-FA,tests,050c76cdcc9d8420eb2986f7ed8a3177b9adf756,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelHystrixTest.java,NA,bug fixing [ remove ignore after fixing a bug ],fix bundles and remove ignore from test that requires the new bundle,TRUE,deletes ignroe,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete test code while test code improvement (improve speed),D-W-RFT [ test improvement ],components,4703172d1017009ab69fd51adce3f114d1434fcc,\camel\components\camel-mail\src\test\java\org\apache\camel\component\mail\MailAttachmentDuplicateNamesTest.java,NA,Refactoring Test [speed up test],speed up test by decreasing consumer delay,FALSE,deleted thread.sleep,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,-,delete setup test code while refactoring to mockito,D-W-RFT,components,020e0c7d92459585b37e72e5ba1e849903a955da,\camel\components\camel-spring-redis\src\test\java\org\apache\camel\component\redis\RedisStringTest.java,NA,Refactor Test [ upgrade mockito ],refactor test using mockito,TRUE,deletes thread.sleep,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,ignore test while deprecating / feature improvement,IG-W-FI,camel-core,b97c03070353442cb257851c37512bcdc222ee1b,\camel\camel-core\src\test\java\org\apache\camel\management\ManagedTracerOptionsTest.java,NA,feature improvement [ deprecate for better feature ],deprecate for better feature,FALSE,deletes ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,adds ignore test while test refactoring,IG-W-RFT,components,c0923bbf1c74c1b6e3ae32dd66a0931bdc5d029d,\camel\components\camel-kubernetes\src\test\java\org\apache\camel\component\kubernetes\producer\KubernetesPersistentVolumesClaimsProducerTest.java,\camel\components\camel-kubernetes\src\main\java\org\apache\camel\component\kubernetes\persistent_volumes_claims\KubernetesPersistentVolumesClaimsProducer.java,Refactor Test,deprecate and refactor to use new mock,FALSE [Ignore removes test smell],adds ignore,-,NA,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
camel,-,delete ignore after implementing test code,D-A-TA,tests,f8ef4eb1aa3fe937b08806aa2b63fb96716b6179,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelZipkinTest.java,NA,New feature,adding new feature,"TRUE[prior to adding new feature, adds a empty test with todo comment]",adds a new implementation,-,NA,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,delete ignore after bug fixing [ unawareness ],D-A-BF,tests,930d4fe62acb203ded8f8ed21aa5fcc0aa0cb3ca,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelIgniteTest.java,NA,bug fixing,failed karaf 4 installatino in test (related to OSGI),FALSE,remove ignore and adds new implementation to fix the failure,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,deletes ignore after waiting for change in feature implementation,D-A-FA,camel-core,b97c03070353442cb257851c37512bcdc222ee1b,\camel\camel-core\src\test\java\org\apache\camel\processor\interceptor\DefaultTraceEventMessageCausedByExceptionTest.java,NA,feature improvement [ deprecate ],deprecate for new feature,FALSE,deletes ignore because new implementation in production code is finished,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,refactor test [ use awaitility - improve performance] [ unawareness ],RFT [ Thread ],camel-core,b2a3e4b1d9bf9027568147e176bb0997aa84105f,\camel\camel-core\src\test\java\org\apache\camel\impl\StopRouteAbortAfterTimeoutTest.java,NA,feature improvement,use awatility - speed up testing,FALSE,test refactoring,Test specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,-,deletes test code while feature improvement,D-W-FI,components,c1a7532fc396241f5f82d8f6fa46a45772eed37b,\camel\components\camel-aws\src\test\java\org\apache\camel\component\aws\lambda\LambdaComponentSpringTest.java,NA,feature improvement [ use mockito ],upgrade to mockito (offers more features),TRUE [deletes setup because unused],deleted setup,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,reverts addition of ignore while fixing bug (failing test eases debugging),R-W-BF,components,f4bbb54f4df5f6a2b360af42cf3c8889332ce1cf,\camel\components\camel-milo\src\test\java\org\apache\camel\component\milo\MonitorItemMultiConnectionsCertTest.java,NA,Revert,revert to debug failure (related to bundles failure),FALSE,reverted,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete ignore after bug fixing [ unawareness ],D-A-BF,tests,08ddcb86ce12244b0f5123fc6aeb900ec72b2c87,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelGuiceTest.java,NA,Delete ignore,use diff version of guice to allow working with OSGI,FALSE,ignored because required diff version of guice for test to work,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,"deletes conditional, which was originally used to prevent running test that require java 1.8, while fixing bug [ unawareness ]",D-A-BF,tests,9e7714a7484f92b7e69e06a3d1d3325dcfb08a28,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelVertxTest.java,NA,bug fixing,fails karaf 4 installation in test (related to OSGI),FALSE,"test requires java 1.8, thus uses conditional. Deletes conditional",-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,ignores test while feature implementation,IG-W-FA,components,d2a08096454da7114c021c7725b9edef38ed86ed,\camel\components\camel-websocket-jsr356\src\test\java\org\apache\camel\websocket\jsr356\JSR356ProducerTest.java,\camel\components\camel-websocket-jsr356\src\main\java\org\apache\camel\websocket\jsr356\JSR356Producer.java,feature implementation,skipping test during feature implementation,FALSE,ignore test thus test smell removed temporarily,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,delete ignore after ignoring test due to feature implementation [ unawareness ],D-A-FA,components,0dab0cd5bab8b4bb23cca2662782a158addef081,\camel\components\camel-spring-boot\src\test\java\org\apache\camel\spring\boot\cloud\CamelCloudServiceCallGlobalConfigurationTest.java,NA,bug fixing,restored unit test (because it did not work before),FALSE,deletes ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,test refactoring [ get rid of thread ] / add new test [ awareness ],RFT [ Thread ],components,a50f55848862f529393a5fd0df93f6d29fbb0c42,\camel\components\camel-aws-xray\src\test\java\org\apache\camel\component\aws\xray\TwoServiceTest.java,NA,added test and improved test for new custom component,added more tests and improved test,TRUE,replaces thread sleep with notifybuilder,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0
camel,-,deletes ignore when depednency is dropped after ignore was introduced due to missing dependency,D-A-FA,components,683b53afeb8da28eab9c21b8156983875c99a6a2,\camel\components\camel-salesforce\camel-salesforce-component\src\test\java\org\apache\camel\component\salesforce\RestApiIntegrationTest.java,NA,-,drop jodatime dependency,FALSE,delete ignore because test originall depended on some object,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,deletes test code while bug fixing,D-W-BF,camel-core,0927ec50d4e43e1054479323b7106ec0db8d57a2,\camel\camel-core\src\test\java\org\apache\camel\processor\FileIdempotentTrunkStoreTest.java,NA,bug fixing [ test failure: Exception ],fixing a bug,FALSE,deletes test code while bug fixing,-,NA,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
camel,-,deletes print statement while improving feature [ awareness ],D-W-FI,components,ede89279e79f73c2d5d5c37fbdcee2023848df84,\camel\components\camel-dropbox\src\test\java\org\apache\camel\component\dropbox\integration\producer\DropboxProducerGetFolderTest.java,NA,feature improvement,to support new feature,FALSE,deletes print,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
camel,-,fixing test code (deletes) while implementing new feature [ unawareness ],D-W-FA,components,043315469656bcc9f8c0c07868cda92bbd14f472,\camel\components\camel-micrometer\src\test\java\org\apache\camel\component\micrometer\TimerProducerTest.java,\camel\components\camel-metrics\src\main\java\org\apache\camel\component\metrics\TimerProducer.java,implement new feature,fixing a test while implementing a new feature,FALSE,delets mockito.inorder,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,deletes unused throws while implemeting new feature [ awareness ],D-W-FA,components,53d0679559106bce561aee98b0362815a80c5a70,\camel\components\camel-micrometer\src\test\java\org\apache\camel\component\micrometer\CounterEndpointTest.java,NA,implement new feature,implementing new feature,FALSE,delete throws because not used,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,test refactoring while improving some other feature [ smell persists: unawareness ],RFT-W-FI,components,0e92c63a7c5ddaee96c13229320b08a7b9be63ae,\camel\components\camel-aws\src\test\java\org\apache\camel\component\aws\ddbstream\DdbStreamConsumerTest.java,\camel\components\camel-aws\src\main\java\org\apache\camel\component\aws\ddbstream\DdbStreamConsumer.java,refactor test [ irrelevant ] while feature improvement,feature improvement,FALSE,Test Refactoring while improving some other feature,extract class [ test smell persists ],TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
camel,-,deletes test code while refactor using mock,D-W-RFT,components,1b95ec611de1a690db33d67873d3712a6fb158ae,\camel\components\camel-kubernetes\src\test\java\org\apache\camel\component\kubernetes\producer\KubernetesNamespacesProducerTest.java,\camel\components\camel-kubernetes\src\main\java\org\apache\camel\component\kubernetes\namespaces\KubernetesNamespacesProducer.java,test refactoring using mock,Refactor test using mock,FALSE,[conditonal ] replaced with mock which facilitates one admin at a time [assertion roulette] deletes most of the code base,-,NA,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,refactor test [ test smell persists ; unwareness ],RFT [ split test ],components,d513651050a633e136832b5709fb1f5f4ab6512a,\camel\components\camel-salesforce\camel-salesforce-component\src\test\java\org\apache\camel\component\salesforce\SalesforceComponentVerifierExtensionTest.java,\camel\components\camel-salesforce\camel-salesforce-component\src\main\java\org\apache\camel\component\salesforce\SalesforceComponentVerifierExtension.java,test refactoring,was initially ignored to integrate karaf feature,FALSE,test refactoring,extract class/move [duplicate assert still persists],"true [purpose of commit is to clean up, but test smell persists]",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
camel,-,delete ignore after bug fixing [ unawareness ],D-A-BF,components,79fbb6a3b8362396774eb14c408edbbf2558dd91,\camel\components\camel-salesforce\camel-salesforce-component\src\test\java\org\apache\camel\component\salesforce\HttpProxyIntegrationTest.java,NA,bug fixing,Bug in Jetty9 causes java.lang.IllegalArgumentException: Invalid protocol login.salesforce.com,FALSE,deleted ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete print test smell [ test smell awareness ],RFT [ polish code ],components,daef4fdaf8732d20de67909a8c34b911482d6286,\camel\components\camel-jms\src\test\java\org\apache\camel\component\jms\JmsStreamMessageTypeTest.java,NA,feature improvement [polish code],polish code,TRUE,deleted print,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
camel,-,refactor test code [ test smell awareness ],RFT [ simlify test code ],components,3232a4a4df0bdc92f062456a1a4bd4f8df347bbe,\camel\components\camel-spring-redis\src\test\java\org\apache\camel\component\redis\RedisSetTest.java,NA,feature improvement [ simplify implementation ],simplifying test code,TRUE,replaced magic number with a var,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
camel,-,delete rest of test code after refactoring [ test smell unawareness ],D-A-RFT,components,fbee9c11b80bc071e082291db6a7f0818e77d9d1,\camel\components\camel-dropbox\src\test\java\org\apache\camel\component\dropbox\integration\producer\DropboxProducerMoveTest.java,NA,refactor test code [ improvement ],refactor test,FALSE,Refactor,"extract method, and rest of the code was deleted [delete code -> test smell removed]",TRUE,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
camel,-,delete ignored test while change in feature implementation,D-A-FI,tests,252cf91f74b09c981eab69ec983cc4bcb2698c23,\camel\tests\camel-itest-karaf\src\test\java\org\apache\camel\itest\karaf\CamelOlingo4Test.java,NA,task [ change in implementation ],was initially ignored to integrate karaf feature,FALSE,deleted ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
camel,-,delete production code while feature improvement [ eager test/lazy test removed ],DP-A-FI,camel-core,cd9a266de9b23629a0ac8b8e3203113ffd8ba8ad,\camel\camel-core\src\test\java\org\apache\camel\impl\EmptyProducerCacheTest.java,NA,feature improvement,improve feature [ migrate to singleton ],FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
camel,-,refactor test [improve test to be configurable],RFT [ improve test code to be configurable ],components,f01bb49da4a427b324129891a22422459ff424bf,\camel\components\camel-spring\src\test\java\org\apache\camel\spring\cloud\ServiceCallConfigurationTest.java,NA,feature improvement,test improvement,FALSE,[assertion roulette/magic number] Refactored [test smell persists],Extract Helper method,true [purpose of the commit is to refactor test],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
camel,-,refactor test [ use mockito to improve testing ] [ unawareness ],RFT [ refactor using mockito ],components,cdef307d49720c65a32ff7169ecdb79596f2802e,\camel\components\camel-nagios\src\test\java\org\apache\camel\component\nagios\NagiosEventNotifierTest.java,\camel\components\camel-nagios\src\main\java\org\apache\camel\component\nagios\NagiosEventNotifier.java,improvement,test improvement [use mockito verify],FALSE,delete thread.sleep while refactoring to mockito,Test specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
camel,-,refactor test [ use awaitility - improve performance] [ unawareness ],RFT [ thread ],camel-core,23fbad1df6e2eac3ece2225eb81e703ff4e1b09a,\camel\camel-core\src\test\java\org\apache\camel\processor\aggregator\DistributedTimeoutTest.java,NA,improvement,use awatility - speed up testing,FALSE,test refactoring,Test specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,0
camel,-,delete code while improvement,D-W-FI,camel-core,cd9a266de9b23629a0ac8b8e3203113ffd8ba8ad,\camel\camel-core\src\test\java\org\apache\camel\impl\DefaultProducerCacheTest.java,NA,improvement,improvement to reduce complexity,FALSE,delete entire test method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
camel,-,remove @before in setup methd and renamed to another method without annotation,RFT-W-FA,components,5e6b7f0ac057e201d1bca18adaeb667e64d3de10,\camel\components\camel-consul\src\test\java\org\apache\camel\component\consul\cloud\ConsulServiceDiscoveryTest.java,\camel\components\camel-consul\src\main\java\org\apache\camel\component\consul\cloud\ConsulServiceDiscovery.java,part of new feature,part of feature addition,FALSE,"remove @before and renames it, and adds additional logic [test smell persists]",-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,-,delete obsolete module,D [Obs],systests,969a10c9f2f9027a53c57fc757f62146bb219cd5,\cxf\systests\jaxrs\src\test\java\org\apache\cxf\systest\jaxrs\JAXRSDataBindingTest.java,\cxf\rt\frontend\jaxrs\src\main\java\org\apache\cxf\jaxrs\provider\JAXRSDataBinding.java,general improvement [ delete obsolete module ],Remove some obsolete modules on the trunk,FALSE,deleted methods,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
cxf,-,refactor test [ share code] [introduce inheritance],RFT [Reuse],rt,31a4a552b7e4430c3ff544d0cb5a834756642653,\cxf\rt\rs\security\oauth-parent\oauth2\src\test\java\org\apache\cxf\rs\security\oauth2\provider\JCacheOAuthDataProviderTest.java,\cxf\rt\rs\security\oauth-parent\oauth2\src\main\java\org\apache\cxf\rs\security\oauth2\provider\JCacheOAuthDataProvider.java,test refactoring,abstract unit test to share test code [code reuse; but introduces inheritance],FALSE,refactoring,extract super class and pull up,TRUE,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
cxf,-,delete ignore after fixing a bug,D-A-BF,systests,bc948f0acbbb1cd8f6ea960fd85f6e942a5db69b,\cxf\systests\jaxrs\src\test\java\org\apache\cxf\systest\jaxrs\JAXRSContinuationsServlet3Test.java,NA,bug fixing,fixed a exception bug (),FALSE,delete ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,"initially helper method contains most of the test logic. This is verbose, and helper should instead be the test method. Instead, developer moves logic from helper to test code, removing unknown test and making helper method perform specific task.",RFT-W-FI [byproduct],systests,ae1842229fbc354e57ca3ca6797e8c9462dfc2ce,\cxf\systests\rs-security\src\test\java\org\apache\cxf\systest\jaxrs\security\oidc\OIDCDynamicRegistrationTest.java,NA,task [ change in implementation ],change in implementation,FALSE,deletes method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
cxf,-,add assertion statements when test implementation has been completed [ awareness ],AT,systests,5d67785208334062a950dc7f85ffcb7d52af3db5,\cxf\systests\ws-security\src\test\java\org\apache\cxf\systest\ws\x509\X509TokenTest.java,NA,add tests,adding new tests,TRUE,adds an assertion,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
cxf,-,-,AT,systests,5d67785208334062a950dc7f85ffcb7d52af3db5,\cxf\systests\ws-security\src\test\java\org\apache\cxf\systest\ws\https\HttpsTokenTest.java,NA,improvement,use awatility - speed up testing,FALSE,test refactoring,Test specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
cxf,-,refactor [remove throws because it is redundant with @Expected Exception ] while implementing a new feature,RFT-W-FA,rt,d2f7dc5a86c53e1e68e15c7eb71cfc0b3efa033d,\cxf\rt\rs\security\http-signature\src\test\java\org\apache\cxf\rs\security\httpsignature\DigestVerifierTest.java,\cxf\rt\rs\security\http-signature\src\main\java\org\apache\cxf\rs\security\httpsignature\DigestVerifier.java,refactor while implementing a new feature,add a new feature,FALSE,deletes throws because unused,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,-,delete ignore after fixing a bug,D-A-BF,rt,64070aa91b4b56155faf7703520a5142fa7a6e36,\cxf\rt\rs\security\jose-parent\jose\src\test\java\org\apache\cxf\rs\security\jose\jwe\JweJsonConsumerTest.java,\cxf\rt\rs\security\jose-parent\jose\src\main\java\org\apache\cxf\rs\security\jose\jwe\JweJsonConsumer.java,bug fixing,ignored smell added for the first time added. It was related to bug fixing. Probably removed after bug was fixed.,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,complete unfinished test prior feature improvement,AT-P-FA,systests,2705f4dde2ec6cf3e1102c7c7b4a7063f110fce5,\cxf\systests\jaxrs\src\test\java\org\apache\cxf\systest\jaxrs\description\OpenApiServiceDescriptionTest.java,NA,add tests,finishing a system test (make integration test available prior to API update),FALSE,adds numerous assertion statements (adds smell),-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
cxf,-,delete unused constructor in test while feature improvement,D-W-FI [byproduct],systests,246a43a7b7ccc813ec4137078fdd939f1d6f2b17,\cxf\systests\transports\src\test\java\org\apache\cxf\systest\http\auth\DigestAuthTest.java,NA,feature improvement,running without internet connection,FALSE,deleted unused constructor,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,-,delete ignored test from 2008,D [ forgot to delete from 2008 ],systests,e3abb5e1c016da5dedd6a035b0fd5507aa339314,\cxf\systests\jaxws\src\test\java\org\apache\cxf\systest\jaxws\LocatorClientServerTest.java,NA,task [ remove ignore test],removing ignored,TRUE,deleted ignore [this was actually added 2008],-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0
cxf,-,refactor test [fix usig existing utility method],RFT [ Replace with utilty + Add. logic ],systests,a732913f6aacda7effc8347e4a29fbe67607cf23,\cxf\systests\rs-security\src\test\java\org\apache\cxf\systest\jaxrs\security\oauth\TemporaryCredentialServiceTest.java,NA,task [fixing old test],fix the old test,FALSE,use some utility function for asserting,Refactor to use utility function,true [purpose of the commit is to refactor test],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,-,refactor test [ test stability ],RFT [ Improve Test Stability ],osgi,b5ba5a7d58b2fc4ea767effb24bf3d26737586b2,\cxf\osgi\itests\src\test\java\org\apache\cxf\osgi\itests\jaxrs\JaxRsServiceTest.java,NA,task [improve test stability],improve test stability,FALSE,replace constructor with final initiallizer,-,FALSE,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,-,delete after bug fixing,D-A-BF,systests,a3295e61bcf8c00c13a79707841a58131fd9c97d,\cxf\systests\jaxrs\src\test\java\org\apache\cxf\systest\jaxrs\security\JAXRSHttpsBookTest.java,NA,allow cxf to build with JDK,allow cxf to work with java 11 [bug report: should work with everything above 9],FALSE,removed conditional because test can now work with java9,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cxf,FP,-,-,systests,6cb52ca1ce15fcba47e68bae02d5aaef4c2b5a65,\cxf\systests\ws-security\src\test\java\org\apache\cxf\systest\ws\mtom\MTOMSecurityTest.java,NA,-,-,-,-,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,test refactoring [ code reuse ; inheritance ],RFT [ Reuse; Inheritance ],systests,dda4173d77d9fa278d9eca005549a55226b72ef9,\cxf\systests\cdi\cdi-weld\cdi-producers-weld\src\test\java\org\apache\cxf\systest\jaxrs\cdi\tomcat\TomcatWarTest.java,NA,test refactoring,Refactor,FALSE,refactored [test smell persists],"Extract Superclass, pull up",FALSE,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
cxf,-,complete unfinished test,CUT,tools,bcb6385a095dcaaf8390ecfc33e9e22b9149daad,\cxf\tools\javato\ws\src\test\java\org\apache\cxf\tools\java2wsdl\processor\internal\jaxws\JaxwsServiceBuilderTest.java,\cxf\rt\frontend\jaxws\src\main\java\org\apache\cxf\jaxws\JaxwsServiceBuilder.java,Task [finish Todo Test],"Finish unfinished test (However, this test was first written in 2008 and never touched since....)",FALSE,Added implementation,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,delete test code,D [ Random ],rt,e3abb5e1c016da5dedd6a035b0fd5507aa339314,\cxf\rt\javascript\javascript-tests\src\test\java\org\apache\cxf\javascript\types\AttributeTest.java,NA,task [remove some ignored],"remove ignore [the test method was initially introduced as ignored, but deleted in this commt without ever being used]",FALSE,delete method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,delete test code,D [ Random ],rt,9890add2c3ed5682a97f117ec547fcf1130dc21f,\cxf\rt\frontend\jaxws\src\test\java\org\apache\cxf\jaxws\EndpointReferenceTest.java,NA,task,remove ignored test [not yet implemented ignored test],FALSE,delete ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
cxf,-,refactor test to improve test stability,RFT [ fix flaky test ],tools,62b20e87b46bfcdcee48f8f7cb509bc3bc05a230,\cxf\tools\corba\src\test\java\org\apache\cxf\tools\corba\WSDLToIDLTest.java,\cxf\tools\corba\src\main\java\org\apache\cxf\tools\corba\WSDLToIDL.java,test improvement,improve test stability [flaky test?],FALSE,-,-,-,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0
zookeeper,-,refactor test code to improve performance,RFT [ performance ],zookeeper-server,b2513c114931dc377bac5e1d39e2f81c6e8cf17e,\zookeeper\zookeeper-server\src\test\java\org\apache\zookeeper\test\ObserverTest.java,\zookeeper\zookeeper-server\src\main\java\org\apache\zookeeper\server\quorum\Observer.java,new feature,new feature that allows abstraction of followers so that it can be observer,FALSE,Refactoring [test smell persists],Extract class and pull up,TRUE,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
zookeeper,-,refactor test code,RFT [ fix flaky test ],src,d13d2f08c730a81d73d58f64a0ae448639dede2b,\zookeeper\src\java\test\org\apache\zookeeper\test\WatcherTest.java,NA,task [ fixing flaky behavior ],Fixing flaky behavior,FALSE,Extract thread.sleep into a separate method and adds more code [the code adds conditiona test logic],-,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
karaf,-,refactor test code,RFT [ clean up ],features,3b42fb5a5b52ce20a7843521d5f41ff157086672,\karaf\features\core\src\test\java\org\apache\karaf\features\ConditionalTest.java,NA,task - clean up test,clean up test,FALSE,Refactor Using Assertion,Test Specific Refactoring [refactor using assertThat],TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
karaf,FP,-,-,management,516c7b20abd7613d9e5aedfc61048ade0610e178,\karaf\management\server\src\test\java\org\apache\karaf\management\KarafMBeanServerGuardTest.java,\karaf\management\server\src\main\java\org\apache\karaf\management\KarafMBeanServerGuard.java,bug/major,-,-,-,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
karaf,-,refactor test code,RFT [ improve assertion ],itests,25745245c5655a3f86ac7fd75a289f00a9d0b08e,\karaf\itests\src\test\java\org\apache\karaf\itests\BundleTest.java,\karaf\features\core\src\main\java\org\apache\karaf\features\internal\model\Bundle.java,improvement/major,fix regression testing/ improvement,FALSE,Refactor Using Assertion,Test Specific Refactoring [refactor assertEqual with assertContain],TRUE,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
karaf,-,refactor test code after feature improvement,RFT-W-FI [ by-product ],itests,1a4ab197ce8817e2d3d47d636f3f62c47b2ce8a6,\karaf\itests\src\test\java\org\apache\karaf\itests\SystemTest.java,NA,Feature improvement,"integration test using same port as karaf, so can't bundle karaf and run integration test same time (use diff port for integration test)",TRUE,"the test method has throws and try/catch, which does not make sense. Thus, developer removes try/catch to allow test to throw and calling method to handle",-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
karaf,-,delete while feature improvement,D-W-FI,itests,224aae43dc3b9303f8f69d0a876d500e06f98107,\karaf\itests\test\src\test\java\org\apache\karaf\itests\JmsTest.java,NA,task - upgrade,upgrading dependency,FALSE,-,-,-,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
karaf,-,refactor test code,RFT [ test clean up ],features,38c728dfe31c8056859767692b0d8848469a33e7,\karaf\features\core\src\test\java\org\apache\karaf\features\internal\service\FeaturesValidationTest.java,NA,task - clean up test,"clean up test - utility class original supported verification, but developer inlined the utility into the test class because utilty class only performs verify logic only",FALSE,"used utility class to do assertion, but inlined assertions in utility to original class",inline utility to original classs,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
karaf,-,refactor test code while turning static utility class into a class that can be instantiated,RFT-W-FI,features,eb95bce7d5a1bcf23a5bda919209394ffcf3c01a,\karaf\features\core\src\test\java\org\apache\karaf\features\internal\service\BlacklistTest.java,\karaf\features\core\src\main\java\org\apache\karaf\features\internal\service\Blacklist.java,task [turning class into an ordinary class],to convert static utility class into a regular class,FALSE,refactor test code while converting production code from static utility to regular class,"extract reusable method, while refactoring for loop using stream",FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
karaf,-,delete while feature improvement,D-W-FI,itests,42ef364773376baf616908db6aef38e8dd000ecb,\karaf\itests\src\test\java\org\apache\karaf\itests\features\PaxCdiFeaturesTest.java,NA,update dependendcy,update dependency,FALSE,whole method deleted [the test was there to not run only if on jdk9 because not supported on jdk8. But if it deletes the method it means it's not needed? What was it there in the first place?,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
flink,-,delete while bug fixing,RFT-W-BF,flink-runtime,63d4819e197b1df1651157fd8f86c8ca0540d0b1,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\registration\RegisteredRpcConnectionTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\registration\RegisteredRpcConnection.java,bug fixing,reonnect when test fails due to connection error,FALSE,"replaced thread.sleep with completable future (instance of future, which waits for completion of some operation)",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
flink,-,refactor test code,RFT [ do not use fail() in exception ],flink-core,e83217bd3205768cc6dbdeead3f7334ce409f6a2,\flink\flink-core\src\test\java\org\apache\flink\core\memory\MemorySegmentUndersizedTest.java,NA,Feature improvement,Refrain from using fail(Exception#getMessage()) because it hides the exception's stack trace and is bad style.,TRUE,removing e code pattern fail(Exception#getMessage(),-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test code by allowing base class to handle setup and teardown to simplify test code [ introduce inheritance; common base class; for maintainbility reasons ],RFT [ commong logic; inheritance ],flink-tests,3c5c8325b6641854fd86596ffe1fc5641a6757c2,\flink\flink-tests\src\test\java\org\apache\flink\test\distributedcache\DistributedCacheTest.java,\flink\flink-core\src\main\java\org\apache\flink\api\common\cache\DistributedCache.java,Feature improvement,"unify test that are similar, but slighty diffferent to ease maintainbility",FALSE,delete code while refactor test code with base to handle setup and teardown,introduce base class,TRUE,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test [by-product] code while fixing a bug [which adds new test],RFT-W-BF,flink-runtime,54f02ec7bae56a0559a61b981d0c88885090b128,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\checkpoint\ExecutionGraphCheckpointCoordinatorTest.java,NA,DEPENDENCY UPGRADE,upgrade dependency,FALSE,refactor test [by-product] code while fixing a bug [which adds new test],"extract method, and move code to setup",FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test code,RFT [ simplify assertions ],flink-mesos,8ba8337941fd1f53f217d0fe1dfe749467db9a82,\flink\flink-mesos\src\test\java\org\apache\flink\mesos\runtime\clusterframework\LaunchableMesosWorkerTest.java,\flink\flink-mesos\src\main\java\org\apache\flink\mesos\runtime\clusterframework\LaunchableMesosWorker.java,Feature improvement,use set equality to simplify assertion,"FALSE [doesn't necessarily talk about magic number, but it realizes that having too many assertion could be simplified ]","using set to simplify assertions, followed by hamcrest matcher",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
flink,-,refactor test case prior to feature addition,RFT-P-FA,flink-contrib,f44b57ccf8f088f2ad4c1f10f479ed62be17eb8b,\flink\flink-contrib\flink-statebackend-rocksdb\src\test\java\org\apache\flink\contrib\streaming\state\RocksDBAsyncSnapshotTest.java,NA,new feature,fix test prior to feature addition,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,add test case due while adding new feature,AT-W-FA,flink-clients,25d277e16970c6a1755f5050f7bc419b158f17aa,\flink\flink-clients\src\test\java\org\apache\flink\client\cli\CliFrontendListTest.java,NA,new feature,feature addition requires tests,FALSE,adds more implementation in test code,-,NANA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,refactor different test code while fixing a bug,RFT-W-BF,flink-libraries,9437a0ffc04318f6a1a2d19c59f2ae6651b26507,\flink\flink-libraries\flink-gelly\src\test\java\org\apache\flink\graph\library\clustering\directed\AverageClusteringCoefficientTest.java,\flink\flink-libraries\flink-gelly\src\main\java\org\apache\flink\graph\library\clustering\directed\AverageClusteringCoefficient.java,bug fixing,bug fixing,FALSE,refactor diff test file while fixing a bug,-,FALSE,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1
flink,-,deletes test code while refactor using mock,D-W-RFT,flink-test-utils-parent,3c5c8325b6641854fd86596ffe1fc5641a6757c2,\flink\flink-test-utils-parent\flink-test-utils\src\main\java\org\apache\flink\test\util\AbstractTestBase.java,NA,task,unify base classes for maintainability,FALSE,deletes code,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test code before feature addition,RFT-B-FA,flink-streaming-java,847ead01f2f0aaf318b2b1ba8501bc697d245900,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\runtime\tasks\StreamTaskAsyncCheckpointTest.java,NA,refactor prior to feature addition,refactor prior to feature addition,FALSE,comments out the code,-,NA,0,1,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0,0,0
flink,-,refactor test while fixing a bug related to missing test,RFT-W-BF,flink-libraries,9437a0ffc04318f6a1a2d19c59f2ae6651b26507,\flink\flink-libraries\flink-gelly\src\test\java\org\apache\flink\graph\library\clustering\undirected\LocalClusteringCoefficientTest.java,\flink\flink-libraries\flink-gelly\src\main\java\org\apache\flink\graph\library\clustering\directed\LocalClusteringCoefficient.java,bug fiixng,bug fixing [adds missing test],FALSE,refactorings reusable method [test smell persists],extract method,FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
flink,-,refactor [by-product] while adding a new feature which adds new test,RFT-A-FA [ new api ],flink-runtime,0a19c456ac7781d94eb0aaaf8f2ac73d0157bacb,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\blob\BlobServerGetTest.java,NA,Refactor after new API implementaiton,Refactor API,FALSE,refactoring [test smell persists],extract method,FALSE,1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0
flink,-,refactor test code [by product] while fixing a bug in prod,RFT-W-BF,flink-queryable-state,74d052bb045031363652116ab8226d8ac00e0cd0,\flink\flink-queryable-state\flink-queryable-state-runtime\src\test\java\org\apache\flink\queryablestate\network\AbstractServerTest.java,NA,fixing a bug in production code [ not sure if it's detected by failed test ],fixing a resource leak in production code,FALSE,"while fixing bug in prod, the developer also refactor test",-,FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,delete test code,D,flink-runtime,4809f5367b08a9734fc1bd4875be51a9f3bb65aa,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\state\filesystem\FsCheckpointStateOutputStreamTest.java,NA,task (refactor),Refactor for better design,FALSE,deletes the assert statement even though nothing has been changed in the orignal code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
flink,-,"refactor code [by-product], but has nothing to do with test smell while improving feature",RFT-W-FI,flink-runtime,88b0f2ac3fd788932d7f434ca57ba3718c3fa621,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\blob\BlobServerPutTest.java,NA,improvement,improvement,FALSE,"by-product refactoring, which unintentionally removes test smell",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
flink,-,refactor test code to introduce common logic [inheritance] (reusability),RFT [ common logic; inheritance ],flink-runtime,4ba3eecd8f1111c39af3f1949827b3d73addec77,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\rest\handler\legacy\messages\StatusOverviewWithVersionTest.java,NA,task,port code to new API end point,FALSE,refactoring [test smell persists],extract common code to base class,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test code to introduce common logic [inheritance] (reusability),RFT [ common logic; inheritance ],flink-runtime,4ba3eecd8f1111c39af3f1949827b3d73addec77,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\rest\handler\legacy\messages\ClusterConfigurationInfoTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\rest\handler\legacy\messages\ClusterConfigurationInfo.java,task,port code to new API end point,FALSE,refactoring [test smell persists],extract common code to base class,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test code,RFT [ use annotation to instantiate expensive fixture 1 per class ],flink-runtime,bf64740b308c3272de51befdab5bd7374db71407,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\jobmanager\SlotCountExceedingParallelismTest.java,NA,improvement,"use of mincluter to assign new port for each test, such that test can run concurrently?",FALSE,@beforeClass refactored to @classRule,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,adds more test code [ adds more test smell ] while implementing new feature,AT-W-FA,flink-runtime,65400bd0a0f6a3bdd3e0bad05e2179534eaf6e9e,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\executiongraph\restart\FixedDelayRestartStrategyTest.java,NA,new feature,new feature,FALSE,adds more test code while adding new feature,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,refactor a test while fixing a bug,RFT-W-BF,flink-runtime,7ddb674cb17c35f17aa073d3bfd6897d7fc13b9e,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\dispatcher\DispatcherTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\dispatcher\Dispatcher.java,bug,bug fixing,FALSE,Refactoring test,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,comment out code while implementating new feature,C-W-FA,flink-runtime,a1ba9f1126270d53168394211a99e354aa2cf20d,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\instance\SlotPoolTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\instance\SlotPool.java,new feature in production,hardening security while implementing new feature,FALSE,commenting out code,-,NA,1,0,0,0,0,1,0,0,0,0,0,0,1,0,0,1,0,0,0,0
flink,-,refactoring prod/test while exposing API,RFT-RFP-W-FI [ exposing API ],flink-runtime,29a6e9952ebb2c7349d25d3696e2ec1d7e8e620a,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\query\netty\message\KvStateRequestSerializerTest.java,NA,improvement,make feature a new REST API by refactoring,FALSE,refactoring to make expose API [test smell persists],extract class and move method,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
flink,-,delete code while fixing a bug,D-W-BF,flink-mesos,4bb488c0f6673ef9099ae7adfc1ec5a9e125cdbf,\flink\flink-mesos\src\test\java\org\apache\flink\mesos\runtime\clusterframework\MesosResourceManagerTest.java,\flink\flink-mesos\src\main\java\org\apache\flink\mesos\runtime\clusterframework\MesosResourceManager.java,bug,bug fixing,TRUE,delete entire method with ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
flink,-,refactor [by-product] while adding a new feature which adds new test,RFT-A-FA,flink-runtime-web,7fe0eb477df52cfd7254695a67d41f3cba34ef0a,\flink\flink-runtime-web\src\test\java\org\apache\flink\runtime\webmonitor\handlers\CurrentJobsOverviewHandlerTest.java,\flink\flink-runtime-web\src\main\java\org\apache\flink\runtime\webmonitor\handlers\CurrentJobsOverviewHandler.java,new feature in production,new feature,FALSE,refactoring [test smell persists],extract method,FALSE [general maintenance task],0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
flink,-,"refactor test code [adding a missing test, leads to refactoring to share the common code]",RFT-W-AT [ share common logic ; inheritance ],flink-core,6cf4a93ebbf36f6c1dd4cc2c9b17dd58880c17c2,\flink\flink-core\src\test\java\org\apache\flink\api\java\typeutils\ObjectArrayTypeInfoTest.java,\flink\flink-core\src\main\java\org\apache\flink\api\java\typeutils\ObjectArrayTypeInfo.java,improvement in test,adding test case,FALSE,refactoring,extract super class,true because changes must be applied to many classes,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactoring after improvement in prod,RFT-A-FI,flink-runtime,0a19c456ac7781d94eb0aaaf8f2ac73d0157bacb,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\blob\BlobCacheRetriesTest.java,NA,improvement in test,code clean up after improvement,FALSE,refactoring [test smell persists],extracts method,FALSE [general maintenance task],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor production code to aid testing,RFP-Improve-T,flink-runtime,e3e601b39492291b5837e58741bf7da46c76404a,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\taskexecutor\NetworkBufferCalculationTest.java,NA,improvement in test,refactor production (remove coupling) code to improve testing. While doing this also refactor test code.,FALSE,deletes and replace code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
flink,-,deletes/replace test while improvement,D-W-FI,flink-streaming-java,bb9b176357bef502391f612de85cce87f45c8d7f,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\api\environment\RemoteStreamExecutionEnvironmentTest.java,NA,improvement in production,improving in implementaiton in prod,FALSE,deletes and replace code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
flink,-,refactoring while fixing a bug,RFT-W-BF,flink-state-backends,390d36132927fe5a1bac1a53664c6c67ebe3e657/4809f5367b08a9734fc1bd4875be51a9f3bb65aa,\flink\flink-state-backends\flink-statebackend-rocksdb\src\test\java\org\apache\flink\contrib\streaming\state\RocksDBStateBackendConfigTest.java,NA,fixing a bug in production,fixing a bug in production,FALSE,refactoring,extract method,FALSE [general maintenance task],0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
flink,-,refactor [by-product] while improving implementation,RFT-W-FI,flink-runtime,a0b668555f5ee407d3cdbc42113cc28f019fc318,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\checkpoint\ZooKeeperCompletedCheckpointStoreTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\checkpoint\ZooKeeperCompletedCheckpointStore.java,improvement in production,improving an implementation,FALSE,refactoring,extract class,FALSE [general maintenance task],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,deletes code while fixing a bug,D-W-BF,flink-libraries,ae9c9d061a8b49931c88908b8713cb2efe5f9202,\flink\flink-libraries\flink-cep\src\test\java\org\apache\flink\cep\nfa\NFATest.java,\flink\flink-libraries\flink-cep\src\main\java\org\apache\flink\cep\nfa\NFA.java,bug fixing in production,fixing a bug,FALSE,deletes code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,removes ignored test after fixing a bug in production code,R-A-BF,flink-libraries,546e2ad73165b00d93c3c460372b9d49a4b5d8b7,\flink\flink-libraries\flink-cep\src\test\java\org\apache\flink\cep\operator\CEPOperatorTest.java,NA,bug fixing in production,fixing a bug,FALSE,delete ignored,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
flink,-,"refactor while improvement [adding a missing test, leads to refactoring to share the common code]",RFT-W-FI,flink-core,6cf4a93ebbf36f6c1dd4cc2c9b17dd58880c17c2,\flink\flink-core\src\test\java\org\apache\flink\api\java\typeutils\ValueTypeInfoTest.java,\flink\flink-core\src\main\java\org\apache\flink\api\java\typeutils\ValueTypeInfo.java,improvement in test,adding test case,FALSE,refactoring,extract super class,true because changes must be applied to many classes,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,deletes code while improving production implementation,D-W-FI,flink-libraries,d313ac765e81f1b41f0eded45dfe23e1622be47a,\flink\flink-libraries\flink-gelly\src\test\java\org\apache\flink\graph\pregel\PregelTranslationTest.java,NA,improvement in production,improving implementation,TRUE,deletes throw,FALSE,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,adds missing test,AT,flink-libraries,9437a0ffc04318f6a1a2d19c59f2ae6651b26507,\flink\flink-libraries\flink-gelly\src\test\java\org\apache\flink\graph\library\metric\undirected\VertexMetricsTest.java,\flink\flink-libraries\flink-gelly\src\main\java\org\apache\flink\graph\library\metric\directed\VertexMetrics.java,bug fixing in test [test is missing fine grained testing scenarios],user reports a bug,FALSE,Refactoring,FALSE,true since you are separating 1 test method into 2,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
flink,-,deletes code while improving implementation in production,D-W-FI,flink-clients,e2f1ba92decdb27f3aea4e21a7cad7dcc98cea1a,\flink\flink-clients\src\test\java\org\apache\flink\client\cli\CliFrontendStopTest.java,NA,improvement in production,disentangle,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
flink,-,refactor test,RFT,flink-core,e83217bd3205768cc6dbdeead3f7334ce409f6a2,\flink\flink-core\src\test\java\org\apache\flink\core\memory\CrossSegmentTypeTest.java,NA,refactoring test,fix a test smell,TRUE,remove fail() with try and catch,Test Specific Refactoring,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,refactor test while improving implementation in production code,RFT-W-FI,flink-streaming-java,53ee80e7873e126242c1ebac949a8463f4367a6b,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\runtime\partitioner\GlobalPartitionerTest.java,\flink\flink-streaming-java\src\main\java\org\apache\flink\streaming\runtime\partitioner\GlobalPartitioner.java,improvement,improvement in production code,FALSE,Refactoring [test smell persists],extract superclass and pull up,FALSE [general maintenance task],1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
flink,-,refactor test while implementing new feature in production,RFT-W-FA,flink-runtime-web,7fe0eb477df52cfd7254695a67d41f3cba34ef0a,\flink\flink-runtime-web\src\test\java\org\apache\flink\runtime\webmonitor\handlers\checkpoints\CheckpointStatsHandlerTest.java,\flink\flink-runtime-web\src\main\java\org\apache\flink\runtime\webmonitor\handlers\checkpoints\CheckpointStatsHandler.java,new feature,implementing a new feature,FALSE,adds new test for new feature and refactor test code [test smell perists],extract method,FALSE [general maintenance task],0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0
flink,-,test refactoring while feature improvement,RFT-W-FI,flink-runtime,9f544d83b3443cf33f5890efdb956678847d445f,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\blob\BlobServerDeleteTest.java,NA,improvement,improvement,FALSE,Refactoring [test smell persists],extract duplicate method,FALSE [general maintenance task],0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
flink,-,replaces code while simplifying feature implementation,RFT-W-FI [ simplify production implementation ],flink-streaming-java,2d511b0624160fc2eaae852c9d0eccec6d8fdb9c,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\runtime\partitioner\BroadcastPartitionerTest.java,-,task,simplify production implementation,FALSE,replaces code with helper method,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
flink,-,deletes code while changing feature implementation,D-W-FI,flink-runtime,8b49ee5aa2e17b1787764c3265e1ebda47d89840,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\io\network\buffer\NetworkBufferPoolTest.java,\flink\flink-runtime\src\main\java\org\apache\flink\runtime\io\network\buffer\NetworkBufferPool.java,-,change in feature implementation because difficulty in tuning,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
flink,-,delete test code while feature improvement,RFT-W-FI,flink-clients,e2f1ba92decdb27f3aea4e21a7cad7dcc98cea1a,\flink\flink-clients\src\test\java\org\apache\flink\client\cli\CliFrontendCancelTest.java,NA,feature improvement,separation of concer (task),FALSE,[Assertion Roulette] replaces assertion with mock [magic number and duplicate assert] dev tried to test expected exception by checking exception message,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
flink,-,refactor test code while implementing new feature,RFT-W-FA,flink-runtime-web,7fe0eb477df52cfd7254695a67d41f3cba34ef0a,\flink\flink-runtime-web\src\test\java\org\apache\flink\runtime\webmonitor\handlers\SubtaskExecutionAttemptAccumulatorsHandlerTest.java,\flink\flink-runtime-web\src\main\java\org\apache\flink\runtime\webmonitor\handlers\SubtaskExecutionAttemptAccumulatorsHandler.java,new feature,new feature,FALSE,refactoring long method? [test smell persists],extract method,FALSE [general maintenance task],0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
flink,-,deletes code while implementing a new feature,D-W-FA,flink-connectors,085d4db849b9c659ba6bb2c7d66a04debeb048c4,\flink\flink-connectors\flink-connector-kafka-base\src\test\java\org\apache\flink\streaming\connectors\kafka\FlinkKafkaConsumerBaseTest.java,\flink\flink-connectors\flink-connector-kafka-base\src\main\java\org\apache\flink\streaming\connectors\kafka\FlinkKafkaConsumerBase.java,new feature,implementing a new feature,FALSE,"while implementing a new feature, it merges old tests and deletes some code.",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,deletes code while removing legacy code and porting to new code base,D-W-FI [ Porting to new code base ],flink-runtime,e671f341718837e1ea86217cadcb43f1a3433480,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\jobmanager\JobManagerTest.java,NA,improvement,remove legacy code while improvement,FALSE,delete code,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0
flink,-,refactor test (use template pattern) while feature improvement [that adds additional fault tolerance mechanism] - test require to test for this improvement,RFT-W-FI [ test is required to test improvement ],flink-runtime,27fd2493e98e90bf904f0b6b7424fd4213b04977,\flink\flink-runtime\src\test\java\org\apache\flink\runtime\taskmanager\TaskManagerProcessReapingTest.java,NA,improvement,improvement in feature to recover from failed task,FALSE,refactoring [test smell persists],template pattern [extract super class and let child class define unique implementation],TRUE [REFACTOR TO REUSE CODE AND ADDS ADDITIONLA TEST],0,1,0,0,0,1,0,1,1,0,0,0,1,0,0,0,0,0,1,0
flink,-,deletes and rework test code while feature addition of deficit component,RFT-W-FI,flink-streaming-java,9ad932c52056d0ed7e96e1c385403a529e6a8edb,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\api\functions\sink\filesystem\RollingPolicyTest.java,NA,new feature,new feature promotes adding more tests/change test implementation to increase coverage,FALSE,delete test code,-,NA,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
flink,-,refactor diff test code while change in implementation,RFT-W-FI,flink-streaming-java,2d511b0624160fc2eaae852c9d0eccec6d8fdb9c,\flink\flink-streaming-java\src\test\java\org\apache\flink\streaming\runtime\partitioner\KeyGroupStreamPartitionerTest.java,\flink\flink-streaming-java\src\main\java\org\apache\flink\streaming\runtime\partitioner\KeyGroupStreamPartitioner.java,simplifying hacky implementation in prod feature,changing feature implementation [simplify hacky implementation],FALSE,"while change in implementation, test code is refactored",extract to helper method [diff from rf proposed before; where we breakdown test into separate test],FALSE [general maintenance task],q,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
accumulo,-,delete test code while deleting production code [remove instability],D-W-FI [ simplfying prod code ],minicluster,c265ea5b16171032419b164e809f5478f70bbba8,\accumulo\minicluster\src\test\java\org\apache\accumulo\cluster\standalone\StandaloneClusterControlTest.java,\accumulo\minicluster\src\main\java\org\apache\accumulo\cluster\standalone\StandaloneClusterControl.java,delete instable code,delete production code due to instability,FALSE,delete test code since production code deleted,-,NA,0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0,1,0,0,0
accumulo,-,delete code while improvement (simplify code),D-W-FI [ simplfying prod code ],core,61245293ab9506cd94175c20f947932b7295eeb9,\accumulo\server\base\src\test\java\org\apache\accumulo\server\AccumuloTest.java,\accumulo\server\base\src\main\java\org\apache\accumulo\server\Accumulo.java,improve feature implementation,improvement,FALSE,delete code since production code is simplified,-,NA,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0
accumulo,-,refactor test/production from automated code inspection,RFT-AUTOMATED,core,f1e56aae347d233076142074fc3ec219a395c84d,\accumulo\core\src\test\java\org\apache\accumulo\core\iterators\user\FilterTest.java,\accumulo\core\src\main\java\org\apache\accumulo\core\bloomfilter\Filter.java,general maintenace task [from automated code inspection],simplify junit assertion using automated tool,FALSE,replaces assertTrue(False) with fail() --> could have used expected exception,-,NA,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
accumulo,-,refactor test [exception related],RFT,core,6f47590896755a454e8b48b465923724e396f81b,\accumulo\core\src\test\java\org\apache\accumulo\core\file\blockfile\cache\BlockCacheManagerTest.java,NA,refactor test,remove unnecessary exception,FALSE,deletes throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
accumulo,-,delete/replace test code while implementing new feature,D-W-FA,hadoop-mapreduce,9dadca0fdd6553ee0d8878139f971d3269eca56a,\accumulo\hadoop-mapreduce\src\test\java\org\apache\accumulo\hadoop\mapred\AccumuloOutputFormatTest.java,\accumulo\core\src\main\java\org\apache\accumulo\core\client\mapred\AccumuloOutputFormat.java,new feature,refactor test to use new API,FALSE,replaces code with new implementation,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
accumulo,-,delete test code,D,server,61245293ab9506cd94175c20f947932b7295eeb9,\accumulo\server\base\src\test\java\org\apache\accumulo\server\AccumuloTest.java,\accumulo\server\base\src\main\java\org\apache\accumulo\server\Accumulo.java,-,-,-,-,-,-,1,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0
accumulo,-,refactor test using automated test tool,RFT-AUTOMATED,minicluster,f1e56aae347d233076142074fc3ec219a395c84d,\accumulo\minicluster\src\test\java\org\apache\accumulo\minicluster\MiniAccumuloClusterTest.java,\accumulo\minicluster\src\main\java\org\apache\accumulo\minicluster\MiniAccumuloCluster.java,task,simplify junit assertion automated tools,FALSE,replaces assertTrue(False) with fail() --> could have used expected exception,-,-,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
accumulo,-,refactor test [ delete unused throws ],RFT,server,7abe4e8dc73e14bc25524587924781e2f9d322bc,\accumulo\server\tserver\src\test\java\org\apache\accumulo\tserver\MemValueTest.java,\accumulo\server\tserver\src\main\java\org\apache\accumulo\tserver\MemValue.java,task,remove unnecessary exception,TRUE,remove throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
accumulo,-,reverting,R,shell,4f2e64728292af22d07b1907b6ec2d432f8564e2,\accumulo\shell\src\test\java\org\apache\accumulo\shell\ShellConfigTest.java,NA,task,revert(aggressively removed deprecated code),FALSE,reverting,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
accumulo,-,refactoring production code eventually improves test code. Fixes eager test since test doesn't need to call too many prod method,RFP-Improves-T,hadoop-mapreduce,9dadca0fdd6553ee0d8878139f971d3269eca56a,\accumulo\hadoop-mapreduce\src\test\java\org\apache\accumulo\hadoop\mapred\AccumuloFileOutputFormatTest.java,\accumulo\core\src\main\java\org\apache\accumulo\core\client\mapred\AccumuloFileOutputFormat.java,new API,implement a new API,FALSE,refactor by implementing builder pattern to avoid test calling too many prod method,use builder pattern,FALSE,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
accumulo,-,adds test code while fixing bug,AT-W-BF,test,db84650e7454b8354a28d0dcda8da1235a6ea175,\accumulo\test\src\test\java\org\apache\accumulo\test\functional\FateStarvationIT.java,NA,bug fixing,fixing a bug,FALSE,adds utility class that does assertions (this utility is associated with bug fixing),Test Specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
accumulo,-,refactor test using automated test tool,RFT-AUTOMATED,core,f1e56aae347d233076142074fc3ec219a395c84d,\accumulo\core\src\test\java\org\apache\accumulo\core\client\mock\MockConnectorTest.java,\accumulo\core\src\main\java\org\apache\accumulo\core\client\mock\MockConnector.java,task,simplify junit assertion automated tools,FALSE,replaces assertTrue(False) with fail() --> could have used expected exception,Test Specific Refactoring,TRUE,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
accumulo,-,"refactor test code [remove unused fixtures], while improving feature implementation",RFT-W-FI,core,04795533f9311d99466c84c0001aa70d52130fcf,\accumulo\core\src\test\java\org\apache\accumulo\core\client\impl\ZookeeperLockCheckerTest.java,\accumulo\core\src\main\java\org\apache\accumulo\core\client\impl\ZookeeperLockChecker.java,improvement,add more feature to clientcontext,TRUE,delete unused fixtures,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,refactor test to remove general fixture,RFT,itests,9bebaf6196c1842c285bfbad50765170e064f6e4,\hive\itests\hive-unit\src\test\java\org\apache\hive\jdbc\TestJdbcWithMiniHS2.java,NA,bug fixing [ notices connection leak: not test failure ],developer notices resource leakage associated with general fixture,TRUE,extract setup to individual method where it is used,Test Specific Refactoring,TRUE,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,"refactor test [ introduce inheritance to share logic with new test class, testing new feature ]code while implementing new feature",RFT-W-FA,itests,1e3ddbddcb23dfecbe58d16d39725ebfb0d5a426,\hive\itests\hive-unit\src\test\java\org\apache\hive\jdbc\TestTriggersTezSessionPoolManager.java,NA,feature improvement while implementing new feature,feature improvement,FALSE,refactor test code in order to support testing new feature [ inheritance; test smell persists ],extract superclass and pull up method [ code reuse ],TRUE,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,delete code while implementing new feature,D-W-FA,hcatalog,fadfcc67c98a019a63f36a138b3c333b80d1e074,\hive\hcatalog\hcatalog-pig-adapter\src\test\java\org\apache\hive\hcatalog\pig\TestParquetHCatStorer.java,NA,new feature,new feature,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hive,-,deletes code while changing feature implementation,D-W-FA,standalone-metastore,ddf3b6cd041a9eae67e70074cc1ab7c6bd413613,\hive\standalone-metastore\metastore-server\src\test\java\org\apache\hadoop\hive\metastore\TestHiveMetaStoreTxns.java,NA,feature additiion,feature addition,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
hive,-,deletes code while fixing a bug,D-W-BF,metastore,92f9d8fb4de7896cc9161bfbd461fac4f2917a35,\hive\metastore\src\test\org\apache\hadoop\hive\metastore\TestObjectStore.java,NA,bug fixing,fixing a bug,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
hive,-,deletes code while fixing bug,D-W-BF,druid-handler,a0c7e87a1128ddd85883178ee7afdf4dedb3cafc,\hive\druid-handler\src\test\org\apache\hadoop\hive\druid\TestHiveDruidQueryBasedInputFormat.java,NA,bug fixing,fix a bug,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hive,-,refactor [extract method] while fixing bug,RFT-W-BF [ code reuse; inheritance ],itests,477f541844db3ea5eaee8746033bf80cd48b7f8c,\hive\itests\hive-unit\src\test\java\org\apache\hive\beeline\hs2connection\BeelineWithHS2ConnectionFileTestBase.java,NA,bug fixing,fix a bug,FALSE,refactor test,extract method [persists],false [not necessary for the commit... by product],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hive,-,revert due to bug,R-W-BF,testutils,0e91e28a9b81916259b8ec8d82445e398d33d4c3,\hive\testutils\ptest2\src\main\java\org\apache\hive\ptest\execution\conf\TestBatch.java,NA,revert feature,reverting commit,FALSE,reverting,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,delets code and adds more test to increase coverage,D/AT [ increase coverage ],ql,1c84e0c043d68f7ce2e1dd80e1e54ca8d615e7ab,\hive\ql\src\test\org\apache\hadoop\hive\ql\io\parquet\TestParquetRowGroupFilter.java,NA,task,improvement,FALSE,deletest test codes. but add more test smells,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
hive,-,reverts code due to failure in test case,R-A-BF,ql,ad6ce0781a4e68fad2960c1053c325753a9504db,\hive\ql\src\test\org\apache\hadoop\hive\ql\optimizer\physical\TestVectorizer.java,\hive\ql\src\java\org\apache\hadoop\hive\ql\optimizer\physical\Vectorizer.java,re-revert,re-revert after fixing a bug,FALSE,re-revert after fixing a bug,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
hive,-,deletes ignore while improving feature,D-W-FI,ql,9f40c8fb9bcf5cce44a7b496e14ba702c7fc37f9,\hive\ql\src\test\org\apache\hadoop\hive\ql\exec\TestExplainTask.java,\hive\ql\src\java\org\apache\hadoop\hive\ql\exec\ExplainTask.java,feature improvement,improvement,FALSE,deletes ignore that was introduced while improving,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hive,-,deletes test code while changing feature implementation,D-W-FI,serde,ffb79509bcaefb9e7f916930edb022371b9d810f,\hive\serde\src\test\org\apache\hadoop\hive\serde2\io\TestTimestampWritable.java,\hive\serde\src\java\org\apache\hadoop\hive\serde2\io\TimestampWritable.java,bug fixing associated with moving code into its own module to isolate future feature implementation and for reuse,bug fixing associated with isolating module,FALSE,replace production method with utility with additional function,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
hive,-,deletes test code while feature improvement,D-W-FI,ql,fc6f4abc55147a65da94fc5a76df2e93657314fa,\hive\ql\src\test\org\apache\hadoop\hive\ql\exec\vector\expressions\TestVectorGenericDateExpressions.java,NA,feature improvement,improvement,FALSE,deletes test case,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,deletes test code while changing feature implementation associated with faulty implementation [ bug fixing ],D-W-FA,ql,fd4e222d54aba6298acd62b57406c83a3a14ba43,\hive\ql\src\test\org\apache\hadoop\hive\ql\parse\TestReplicationSemanticAnalyzer.java,\hive\ql\src\java\org\apache\hadoop\hive\ql\parse\ReplicationSemanticAnalyzer.java,bug fixing [ improve insufficient implementation ],change in implementation associated with new feature,FALSE,deletes test case,-,NA,0,0,0,0,0,0,0,0,1,0,1,0,0,1,1,0,0,0,0,0
hive,-,deletes test code while changing feature implementation associated with new feature,D-W-FA,ql,53df7e881723827a29a783fcbff67a16929950ec,\hive\ql\src\test\org\apache\hadoop\hive\ql\txn\compactor\TestWorker2.java,NA,new feature,change in implementation associated with new feature,TRUE,deletes constructor [ by - product ] while change in implementation,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,deletes ignore while feature improvement,D-W-FI,druid-handler,2a5ba5c9c6db65018355bcfb301e422e7c5d275f,\hive\druid-handler\src\test\org\apache\hadoop\hive\ql\io\TestDruidRecordWriter.java,\hive\druid-handler\src\java\org\apache\hadoop\hive\druid\io\DruidRecordWriter.java,feature improvement,improvement to new version of guava,FALSE,deletes ignored,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hive,-,refactor test while test improvement,RFT [ parallization ],hcatalog,2cae7361fdf8347faf0fa2edfc6f52600ab764aa,\hive\hcatalog\hcatalog-pig-adapter\src\test\java\org\apache\hive\hcatalog\pig\TestHCatStorer.java,\hive\hcatalog\hcatalog-pig-adapter\src\main\java\org\apache\hive\hcatalog\pig\HCatStorer.java,refactor test [ test improvement ],to parallize a test,FALSE,refactoring [test smell persists],"extract superclass and pull up method, such that test can share same fixture and can ease parallze testing",TRUE,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,1,1
hive,-,replaces code while fixing bug (this code deleted is replaced with a static class to isolate point of failure; which will be merged),RFT-W-BF [ refactor to isolate point of failure to fix the bug ],ql,b2a3f3a83a0175a1f5c6978d7811f7f085ec0195,\hive\ql\src\test\org\apache\hadoop\hive\ql\TestTxnCommands.java,NA,bug fixing,bug fixing,FALSE,deletes code and replaces with a temporary static class,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
hive,-,replaces code while changing implementation,CTI-W-FA,itests,ba8a99e115b6726e0de3ed2ac60b25037156b084,\hive\itests\hive-unit\src\test\java\org\apache\hadoop\hive\metastore\TestAcidTableSetup.java,NA,feature addition,feature addition,FALSE,replaces code with another,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,delete [by-product] while implementing a new feature,D-W-FA,hcatalog,c5a9673a014ad7362a3cbd8a53fe021ee7b7082f,\hive\hcatalog\streaming\src\test\org\apache\hive\hcatalog\streaming\TestStreaming.java,NA,new feature,separate features into its own modules,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
hive,-,reverting during improvement,R-W-FI,druid-handler,ed64a74e864e17c615fc8dede2a5272d3a18bcb3,\hive\druid-handler\src\test\org\apache\hadoop\hive\druid\TestDruidStorageHandler.java,\hive\druid-handler\src\java\org\apache\hadoop\hive\druid\DruidStorageHandler.java,reverting during improvement,reverting,FALSE,revert,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
hive,-,delete code while fixing bug,D-W-BF,itests,91d25b48abe43642eebec640f3d093bb8410f768,\hive\itests\hive-unit\src\test\java\org\apache\hive\service\cli\operation\TestOperationLoggingLayout.java,NA,bug fixing,fixing a bug,FALSE,delete code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,changes test code while improving a new feature-,CTI-W-FI,itests,3ce97c907156b26dc5acbf7e88915f42b319859d,\hive\itests\hive-unit\src\test\java\org\apache\hadoop\hive\ql\security\authorization\plugin\TestHiveAuthorizerShowFilters.java,NA,improvement,improvement in feature,FALSE,modified,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hive,-,refactor test [remove code duplication],RFT,service,8888fe4d88d6459f7b3672d3cc32e87b3c742214,\hive\service\src\test\org\apache\hive\service\auth\TestLdapAtnProviderWithMiniDS.java,NA,test refactor,remove duplicate code in test cases by using utility class,FALSE,refactoring [test smell persists],"replace test setup, execution with utility class",TRUE,0,0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,0
hive,-,delete test code while turning production class into delegate class while fixing a bug,D-W-BF,common,ff67cdda1c538dc65087878eeba3e165cf3230f4,\hive\common\src\test\org\apache\hive\common\util\TestShutdownHookManager.java,\hive\common\src\java\org\apache\hive\common\util\ShutdownHookManager.java,bug fixing,bug fixing that requires turning feature into delegate class,FALSE,delete test code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,1
bookkeeper,-,delete code while change in implementation (deprecation),D-W-FI [ deprecation ],bookkeeper-server,b53c0c3370c42d753afb852824ea12d2dbce4f2e,\bookkeeper\bookkeeper-server\src\test\java\org\apache\bookkeeper\discover\TestZkRegistrationManager.java,\bookkeeper\bookkeeper-server\src\main\java\org\apache\bookkeeper\discover\ZKRegistrationManager.java,task [deprecation],deprecation,FALSE,deletes test code,-,NA,0,0,1,0,0,1,0,0,0,0,0,0,0,0,1,0,1,0,0,0
bookkeeper,-,delete code while deprecation,D-W-FI [ deprecation ],src,d15bc06466e345651f53ef7a7f5a771ac4880446,\bookkeeper\src\test\java\com\twitter\distributedlog\TestInterleavedReaders.java,NA,task [deprecation],deprecation and clean up,FALSE,deletes test code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
bookkeeper,-,refactor test code while deprecating and change in implementation,RFT-W-FI [ deprecation ],bookkeeper-server,b53c0c3370c42d753afb852824ea12d2dbce4f2e,\bookkeeper\bookkeeper-server\src\test\java\org\apache\bookkeeper\replication\AuditorRollingRestartTest.java,NA,deprecation and change in implementatation,deprecation and change implementation,FALSE,refactoring [test smell persists],extract method,false [not necessary for the commit... by product],0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,0,0,1
bookkeeper,-,refactor test code while implementing new feature,RFT-W-FA,bookkeeper-server,916cd6655a70407e8c251c74814543ba1dbcf026,\bookkeeper\bookkeeper-server\src\test\java\org\apache\bookkeeper\bookie\CreateNewLogTest.java,NA,new feature,new feature,TRUE,refactor test,replace thread.sleep with future you can wait on,TRUE,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
bookkeeper,-,refactor test while implementing new feature,RFT-W-FA,bookkeeper-server,b6db915f7b787b100a4feeb5999bf288cf8737ed,\bookkeeper\bookkeeper-server\src\test\java\org\apache\bookkeeper\sasl\GSSAPIBookKeeperTest.java,NA,new feature,new feature - moving test,FALSE,deletes and replaces code,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0
bookkeeper,-,replaces code while deprecating and adding new implementation,CTI-W-FI [ deprecation ],bookkeeper-server,68088398f6aaea7b6fa64489d5f0b87e0c5a4bd5,\bookkeeper\bookkeeper-server\src\test\java\org\apache\bookkeeper\discover\TestZkRegistrationClient.java,\bookkeeper\bookkeeper-server\src\main\java\org\apache\bookkeeper\discover\ZKRegistrationClient.java,deprecation,deprecation,FALSE,deletes and replaces code,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
bookkeeper,-,replace test code while testing backward compatibility,RFT [ for testing backward compatibility ],tests,305efca865f1cc8d6c89f6e6a53669e0b1265948,\bookkeeper\tests\backward\src\test\java\org\apache\bookkeeper\tests\backward\TestBackwardCompat.java,NA,task [replace backward compatibility test],replace backward compatibility test,FALSE,deletes test code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1
hadoop,-,refactoring test while implementing a new feature,RFT-W-FA,hadoop-hdfs-project,2f73396b5901fd5fe29f6cd76fc1b3134b854b37,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\security\token\block\TestBlockToken.java,NA,a task part of new feature,encode implementation in anothre class,FALSE,changes modifier,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,FP,-,-,hadoop-hdfs-project,f6b1a818124cc42688c4c5acaf537d96cf00e43b,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\datanode\TestBlockRecovery.java,NA,BUG FIXING,fixing a bug,FALSE,-,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
hadoop,FP,-,-,hadoop-yarn-project,d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-nodemanager\src\test\java\org\apache\hadoop\yarn\server\nodemanager\nodelabels\TestScriptBasedNodeLabelsProvider.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-nodemanager\src\main\java\org\apache\hadoop\yarn\server\nodemanager\nodelabels\ScriptBasedNodeLabelsProvider.java,-,-,-,-,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,test refactoring to extract common logic,RFT [ commong logic ],hadoop-yarn-project,f155ab7cfa64e822171708040cb49889338961ce,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-nodemanager\src\test\java\org\apache\hadoop\yarn\server\nodemanager\containermanager\TestContainerManagerRecovery.java,NA,improvement,refactoring [test smell persists],FALSE,refactor [test smell persists],extract method,TRUE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
hadoop,-,test refactoring while implementing new feature,RFT-W-FA,hadoop-ozone,999da98d67c0a5e662802a65bc1c5167808f270c,\hadoop\hadoop-ozone\ozone-manager\src\test\java\org\apache\hadoop\ozone\om\ratis\TestOzoneManagerRatisServer.java,\hadoop\hadoop-ozone\ozone-manager\src\main\java\org\apache\hadoop\ozone\om\ratis\OzoneManagerRatisServer.java,new feature,new feature,FALSE,refactor test while implementing new feature,extract method to setup,FALSE,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,test refactoring while implemenitng new feature,RFT-W-FA,hadoop-yarn-project,5e64e62deeb467ac2969bc357a24810db855cffa,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\test\java\org\apache\hadoop\yarn\server\resourcemanager\nodelabels\TestFileSystemNodeAttributeStore.java,NA,new feature,new feature --> clear state prior to test,FALSE,refactor common code in setup to utility class [persists],extract utility class from setup,FALSE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
hadoop,-,deletes code while fixing a bug,D-W-BF,hadoop-ozone,50715c0699b2603622223c40ef0729c83ac26cf0,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\hdds\scm\container\TestContainerStateManagerIntegration.java,NA,bug fiixng,bug fixing,FALSE,deletes code [unintentionally],-,NA,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
hadoop,-,test refactoring while implementing a new feature,RFT-W-FA,hadoop-hdfs-project,3159b39cf8ef704835325263154fb1a1cecc109d,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\namenode\sps\TestStoragePolicySatisfier.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\hdfs\server\namenode\sps\StoragePolicySatisfier.java,new feature,new feature - refactoring test,FALSE,refactoring long method into helper method [one of the duplicate assert is moved to helper method],extract method,FALSE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,-,test refactoring on another class while fixing a bug,RFT-W-BF,hadoop-mapreduce-project,6529c87551e07e9da1e1b273eff4c6bad6b3e838,\hadoop\hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-jobclient\src\test\java\org\apache\hadoop\mapred\TestNetworkedJob.java,NA,fixing a bug,bug fixing,TRUE,remove redundant assertion by replacing with correct value,Test Specific Refactoring,FALSE,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0
hadoop,-,delete code while improvement,D-W-FI,hadoop-ozone,aaf03cc459a34af284f9735453aefd4ddb430d67,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\ozone\scm\TestContainerSQLCli.java,NA,improvement,improvement - delete unused code,FALSE,delete unused code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
hadoop,-,delete code while fixing a bug [remove until solution],D-W-BF,hadoop-yarn-project,620325e81696fca140195b74929ed9eda2d5eb16,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\test\java\org\apache\hadoop\yarn\server\resourcemanager\webapp\TestRMWebServicesAppsModification.java,NA,bug fixing,bug fixing - delete code with bugs,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,delete code and add it to another helper method while implementing a new feature that adds new test method that requires this functionality,RFT-W-FA,hadoop-hdfs-project,3b637155a47d2aa93284969a96208347a647083d,\hadoop\hadoop-hdfs-project\hadoop-hdfs-rbf\src\test\java\org\apache\hadoop\hdfs\server\federation\router\TestRouterQuota.java,NA,implementing a new feature,new feature adds new test method that changes existing code,FALSE,deletes code and adds to a helper method,dirty refactoring? moves some logic to a helper method,FALSE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,delete redundant code while improvement,D/RFT-W-FI,hadoop-hdds,3a43ac2851f5dea4deb8a1dfebf9bf65fc57bd76,\hadoop\hadoop-hdds\server-scm\src\test\java\org\apache\hadoop\hdds\scm\block\TestBlockManager.java,NA,improvement,removes redundant code,FALSE,deletes code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,deletes/rename code while fixing bug,D-W-BF,hadoop-tools,ce03a93f78c4d97ccb48a3906fcd77ad0ac756be,\hadoop\hadoop-tools\hadoop-azure\src\test\java\org\apache\hadoop\fs\azurebfs\ITestAzureBlobFileSystemE2EScale.java,NA,bug fixing,bug fixing,FALSE,deletes code and renames method,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,delete code while fixing bug,D-W-BF,hadoop-yarn-project,56142171b9528646f26072e022902549a16c8f27,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-timelineservice\src\test\java\org\apache\hadoop\yarn\server\timelineservice\storage\TestFileSystemTimelineWriterImpl.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-timelineservice\src\main\java\org\apache\hadoop\yarn\server\timelineservice\storage\FileSystemTimelineWriterImpl.java,bug fixing,bug fixing,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0
hadoop,-,replaces code while improvement,CTI-W-FI,hadoop-yarn-project,d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-timeline-pluginstorage\src\test\java\org\apache\hadoop\yarn\server\timeline\TestEntityGroupFSTimelineStore.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-timeline-pluginstorage\src\main\java\org\apache\hadoop\yarn\server\timeline\EntityGroupFSTimelineStore.java,improvement,improvement,FALSE,replaces code,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,revert code because migration involves additional code changes [better to separate],R-W-FA,hadoop-mapreduce-project,115be193df07277e23818288ce9258609f272df3,\hadoop\hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-jobclient\src\test\java\org\apache\hadoop\mapred\TestReduceFetchFromPartialMem.java,NA,revert during improvement to separte commits,revert a commit while improvemenet,FALSE,reverts,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,delete code after feature implementation,D-A-FA,hadoop-yarn-project,2191f5b533c6b4763f5d443d21127f1f8552ce64,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-applications\hadoop-yarn-slider\hadoop-yarn-slider-core\src\test\java\org\apache\hadoop\yarn\service\client\TestServiceCLI.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-applications\hadoop-yarn-slider\hadoop-yarn-slider-core\src\main\java\org\apache\hadoop\yarn\service\client\ServiceCLI.java,code clean up,code clean up after feature implementation,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,refactor test,RFT,hadoop-hdfs-project,4ed33e9ca3d85568e3904753a3ef61a85f801838,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\security\token\block\TestBlockToken.java,NA,improvement,refactor test for improvement,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
hadoop,-,delete test while improvement [deprecating],D-W-FI,hadoop-common-project,a6c79f92d503c664f2d109355b719124f29a30e5,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\ipc\TestRPCCompatibility.java,NA,improvement,deprecating,FALSE,delete code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1
hadoop,-,replaces code while fixing bug [false implementation of expected exception],CTR-W-BF,hadoop-yarn-project,00058167431475c6e63c80207424f1d365569e3a,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-nodemanager\src\test\java\org\apache\hadoop\yarn\server\nodemanager\containermanager\TestNMProxy.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-common\src\main\java\org\apache\hadoop\yarn\client\NMProxy.java,fixing bug,fixing bug [faulty expected expection],FALSE,replaces code,-,NA,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
hadoop,-,ignores test while fixing a bug,IG-W-BF,hadoop-ozone,ab37423ad8debe2f050133ad97b686083531c2ea,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\ozone\om\TestOzoneManager.java,\hadoop\hadoop-ozone\ozone-manager\src\main\java\org\apache\hadoop\ozone\om\OzoneManager.java,fixing bug,ignores while fixing bug,FALSE,@ignores,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0
hadoop,-,refactor test while changing implementation following from new feature,RFT-W-FI,hadoop-hdfs-project,9e82e5a86ea66b9d24d38b922ee5fa97b3391475,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\namenode\TestStoragePolicySatisfierWithStripedFile.java,NA,change in feature implementation subtask of new feature,feature implementation,FALSE,replaces it with helper method with better logic,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
hadoop,-,revert patch due to fix a bug,R-W-BF,hadoop-mapreduce-project,713349a9af4654dad4d4c372454552bfd063ca5f,\hadoop\hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-jobclient\src\test\java\org\apache\hadoop\mapreduce\TestCounters.java,NA,bug fixing,revert test,FALSE,reverting,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,revert because it undoes prior optimization introduced for fixing bug,R-A-BF,hadoop-hdfs-project,3ca4d6ddfd199c95677721ff3bcb95d1da45bd88,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\TestReservedRawPaths.java,NA,revert optimization regression introduced in prior commit to fix a bug,revert test,FALSE,reverting,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,-,delete ignore while enabling test,D,hadoop-tools,bd50fa956b1ca25bb2136977b98a6aa6895eff8b,\hadoop\hadoop-tools\hadoop-azure\src\test\java\org\apache\hadoop\fs\azurebfs\ITestAzureBlobFileSystemFileStatus.java,NA,enable ignored test,enabling ignored test,FALSE,delete ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hadoop,FP,-,-,hadoop-hdfs-project,7c59add3da984b4e7003d0d789ac713501f6eba9,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\ozone\container\ozoneimpl\TestOzoneContainer.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\ozone\container\ozoneimpl\OzoneContainer.java,-,-,-,-,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hadoop,-,change in implementation that deletes code during feature addition,D-W-FA,hadoop-common-project,3fbf4cd5da13dde68b77e581ea2d4aa564c8c8b7,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\fs\contract\AbstractContractRootDirectoryTest.java,NA,feature addition,make test robust,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0
hadoop,FP,-,-,hadoop-hdfs-project,f678080dbd25a218e0406463a3c3a1fc03680702,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\datanode\TestDiskError.java,NA,-,-,-,-,-,-,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
hadoop,-,change in implementation to accomodate bug fixing in production,CTI-W-FI,hadoop-hdfs-project,e50aa53eed3d0ff1bc8fe60381524bb3bbe53bc1,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\datanode\fsdataset\impl\TestFsVolumeList.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\hdfs\server\datanode\fsdataset\impl\FsVolumeList.java,bug fixing,fixing bug that causes dead lock in production code,FALSE,adds code in test while fixing bug,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
hadoop,-,change in implementation to accomodate improvement in production,CTI-W-FI,hadoop-common-project,4dd6206547de8f694532579e37ba8103bafaeb12,\hadoop\hadoop-common-project\hadoop-auth\src\test\java\org\apache\hadoop\security\authentication\util\TestRandomSignerSecretProvider.java,\hadoop\hadoop-common-project\hadoop-auth\src\main\java\org\apache\hadoop\security\authentication\util\RandomSignerSecretProvider.java,improvement,improvement,FALSE,change implementation while introducing improvement,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0
hadoop,-,comments out code while improvement,C-W-FI,hadoop-ozone,3a43ac2851f5dea4deb8a1dfebf9bf65fc57bd76,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\ozone\scm\TestContainerSQLCli.java,NA,improvement,improvement - deletes unused code,FALSE,comments out code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,-,refactor test while change in feature implementation,RFT-W-FI,hadoop-yarn-project,892b193bd77c15932b4c084c1d525b7017def0d4,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-timelineservice\src\test\java\org\apache\hadoop\yarn\server\timelineservice\storage\common\TestKeyConverters.java,NA,change in feature implementation subtask of new feature,change in implementation for a new feature,FALSE,refactoring to hide visilibility and better testability,extract class and move,FALSE,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1
hadoop,-,adds code while change in feature implementation subtask for a new feature,AT-W-FA,hadoop-hdfs-project,98d3360e3ac9fafd597cd5c08e46afb0ad154ef3,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\ozone\container\common\TestDatanodeStateMachine.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\ozone\container\common\statemachine\DatanodeStateMachine.java,change in feature implementation subtask of new feature,change in implementation for a new feature,FALSE,adds assertions,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
hadoop,-,replace code while change in feature implementation subtask for a new feature,D-W-FA,hadoop-hdfs-project,5df2d2b8fd2932fb6e931d948fb6620ab7bcf0bb,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\diskbalancer\TestDiskBalancerWithMockMover.java,NA,change in feature implementation subtask of new feature,change in implementation for a new feature,FALSE,replaces thread.sleep witht utility,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0
hadoop,-,delete ignore after fixing a bug,D-A-BF,hadoop-mapreduce-project,2bc3351eaf240ea685bcf5042d79f1554bf89e00,\hadoop\hadoop-mapreduce-project\hadoop-mapreduce-client\hadoop-mapreduce-client-jobclient\src\test\java\org\apache\hadoop\mapred\TestConcatenatedCompressedInput.java,NA,bug fixing,enable ignored test after fixing a bug,FALSE,delete ignore,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hadoop,-,refactor test after fixing a bug,RFT-W-BF,hadoop-tools,ce03a93f78c4d97ccb48a3906fcd77ad0ac756be,\hadoop\hadoop-tools\hadoop-azure\src\test\java\org\apache\hadoop\fs\azurebfs\ITestAzureBlobFileSystemFlush.java,NA,-,stabiliizng test after fixing a bug,FALSE,refactoring [test smell persists],renaming a method,FALSE,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,deletes code and refactor some test while fixing a bug,D/RFT-W-BF,hadoop-ozone,902345de66b7ee4ceb03ae4a61ea96c4b6b6eaa7,\hadoop\hadoop-ozone\tools\src\test\java\org\apache\hadoop\ozone\freon\TestFreonWithDatanodeRestart.java,NA,bug fixing,fixing a bug,FALSE,delete codes including senstive equality and also refactor test [test smell persists],extract method,FALSE,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,1
hadoop,-,adding end to end test after implementing a new feature,AT-A-FA,hadoop-yarn-project,8a9ecb7584b529be1de3a6e8850041e211c88ebc,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\test\java\org\apache\hadoop\yarn\server\resourcemanager\TestDistributedSchedulingService.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\main\java\org\apache\hadoop\yarn\server\resourcemanager\DistributedSchedulingService.java,new feature,adding end to end test for new feature,FALSE,separated logic into different module,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,adding new test after implementing new feature,AT-A-FA,hadoop-hdfs-project,4d333f8db1972ae42ea3e68991b96b078cb76a30,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\ozone\TestOzoneClientImpl.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\ozone\OzoneClientImpl.java,new feature,add test after implementing new feature,FALSE,added test,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
hadoop,-,delete code while refactoring production code,D-W-RFP,hadoop-yarn-project,6f4bc49c6d153e03edcc9b3a796fb1ccc95334b0,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-common\src\test\java\org\apache\hadoop\yarn\nodelabels\TestFileSystemNodeLabelsStore.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-common\src\main\java\org\apache\hadoop\yarn\nodelabels\FileSystemNodeLabelsStore.java,new feature,refactoring production code to support new feature,FALSE,delete code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
hadoop,-,refactor another test code while improving feature,RFT-W-FI,hadoop-hdfs-project,10185d9a77ce07080588f3c77399a07cd7ccf427,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\TestDFSClientRetries.java,NA,improvement,improvement,TRUE,refactor test,Test Specific Refactoring [replace magic number with variable; readability],FALSE,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
hadoop,-,refactor test code for reuse in implementing new test method,RFT [ Reuse while adding new test ],hadoop-hdfs-project,b94b5021b83e7912546859908c96f8a44382f47b,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\ozone\web\client\TestBuckets.java,NA,new feature,new feature,FALSE,refactor test for reusability in new test method,extract method,TRUE,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
hadoop,-,delete code while fixing a bug in production code,D-W-BF,hadoop-ozone,43baa036aeb025bcbed1aca19837b072f2c14a6a,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\ozone\scm\TestXceiverClientManager.java,\hadoop\hadoop-hdds\client\src\main\java\org\apache\hadoop\hdds\scm\XceiverClientManager.java,bug fixing,bug fixing,FALSE,delete code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,deletes code while implementing a new feature,D-W-FA,hadoop-common-project,34cc21f6d1a293d92613defba38e8ae810db4c71,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\log\TestLogLevel.java,\hadoop\hadoop-common-project\hadoop-common\src\main\java\org\apache\hadoop\log\LogLevel.java,new feature,new feature,FALSE,delete code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0
hadoop,-,refactor test while feature improvement in production,RFT-W-FI,hadoop-yarn-project,fa6137501c1499ae33f6e0e2adc31671a7e782dc,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\test\java\org\apache\hadoop\yarn\server\resourcemanager\reservation\TestCapacityOverTimePolicy.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\main\java\org\apache\hadoop\yarn\server\resourcemanager\reservation\CapacityOverTimePolicy.java,improvement,improvement,FALSE,refactoring [test smell persists],extract superclass and pull up,FALSE,1,1,0,0,0,0,1,0,0,0,1,0,0,1,1,1,0,0,0,0
hadoop,-,deletes code while improving a new feature,D-W-FI,hadoop-hdfs-project,dd9ebf6eedfd4ff8b3486eae2a446de6b0c7fa8a,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\server\blockmanagement\TestBlockInfo.java,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\main\java\org\apache\hadoop\hdfs\server\blockmanagement\BlockInfo.java,improvement,improve datastructure,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,-,delete code while fixing a bug associated with missing feature,D-W-BF,hadoop-ozone,2a7f4859912e83910f9a418f69ce6d4bd4a37815,\hadoop\hadoop-ozone\tools\src\test\java\org\apache\hadoop\ozone\freon\TestProgressBar.java,\hadoop\hadoop-ozone\tools\src\main\java\org\apache\hadoop\ozone\freon\ProgressBar.java,change in feature implementation subtask of new feature,fixing bug associated with missing feature,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
hadoop,-,delete code while migrating test code,D-W-FI [ migrating ],hadoop-common-project,62a9667136ebd8a048f556b534fcff4fdaf8e2ec,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\ipc\TestRPCCompatibility.java,NA,improvement/migration,deprecation/improvement,FALSE,deletes code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,1
hadoop,-,delete code while fixing a bug associated with missing feature,D-W-BF,hadoop-ozone,4ecdcc9620bd71833cee001aa08d0ceae4b9c59c,\hadoop\hadoop-ozone\tools\src\test\java\org\apache\hadoop\ozone\freon\TestProgressBar.java,\hadoop\hadoop-ozone\tools\src\main\java\org\apache\hadoop\ozone\freon\ProgressBar.java,change in feature implementation subtask of new feature,fixing bug associated with missing feature,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0
hadoop,-,change in implementation while fixing bug,RFT-W-BF [by-product],hadoop-common-project,b6d8f87b8eea6981885d6e90d708b8bc1be6428b,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\conf\TestConfigurationFieldsBase.java,NA,bug fixing,replacing print statement for run time log,FALSE,replaces with LOGIN,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,refactor test while fixing a bug [test failed],RFT-W-BF [by-product],hadoop-tools,444b2ea7afebf9f6c3d356154b71abfd0ea95b23,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\test\java\org\apache\hadoop\yarn\server\resourcemanager\scheduler\capacity\TestLeafQueue.java,\hadoop\hadoop-yarn-project\hadoop-yarn\hadoop-yarn-server\hadoop-yarn-server-resourcemanager\src\main\java\org\apache\hadoop\yarn\server\resourcemanager\scheduler\capacity\LeafQueue.java,bug fixing,fixing a bug,FALSE,extract general fixture into another method that can be configurable,Test Specific Refactoring,TRUE,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,unrevert,R-W-BF,hadoop-common-project,574dcd34c0da1903d25e37dc5757642a584dc3d0,\hadoop\hadoop-common-project\hadoop-common\src\test\java\org\apache\hadoop\ipc\TestAsyncIPC.java,NA,unrevert subtask of feature addition,unrevert task during feature improvement,FALSE,unrevert,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0
hadoop,-,deletes code while fixing a bug,D-W-BF,hadoop-ozone,dce4ebe81471fa2c1ef913a1a2c8acffcbdaa6f8,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\hdds\scm\pipeline\TestSCMRestart.java,NA,fix bug,bug fiixng,FALSE,deletes code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,deletes code while feature improvement,D-W-FI,hadoop-ozone,35c7351f4bf2d17439db9adc571583d89a267f35,\hadoop\hadoop-ozone\tools\src\test\java\org\apache\hadoop\ozone\genconf\TestGenerateOzoneRequiredConfigurations.java,\hadoop\hadoop-ozone\tools\src\main\java\org\apache\hadoop\ozone\genconf\GenerateOzoneRequiredConfigurations.java,improvement,improvement,FALSE,deletes code,-,NA,0,0,0,0,0,0,0,0,0,0,1,0,0,1,1,0,0,0,0,1
hadoop,-,revert to fix bug,R-W-BF,hadoop-hdfs-project,65a941008d4bbf906772399d3f035f2a0da5abfa,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\hdfs\TestHDFSServerPorts.java,NA,revert subtask of feature improvement,revert to fix faults,FALSE,"reverting, which removes code",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0
hadoop,-,ignore test while improvement,IG-W-FI,hadoop-hdds,71df8c27c9a0e326232d3baf16414a63b5ea5a4b,\hadoop\hadoop-hdds\server-scm\src\test\java\org\apache\hadoop\hdds\scm\node\TestContainerPlacement.java,NA,improvement,improvement,FALSE,@ignored,-,NA,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,1,0
hadoop,-,delete code while code clean up after feature addition,D-W-FA,hadoop-hdfs-project,6a754caca0d4cbd4e8216f3459c727a6662ca951,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\ozone\TestOzoneConfigurationFields.java,NA,clean up subtask of feature addition,code clean up,FALSE,deletes code,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
hadoop,-,deletes code while feature improvement,D-W-FI,hadoop-hdds,2403231c8c3685ba08cd6bdf715d281cae611e45,\hadoop\hadoop-hdds\framework\src\test\java\org\apache\hadoop\hdds\server\events\TestEventQueue.java,\hadoop\hadoop-hdds\framework\src\main\java\org\apache\hadoop\hdds\server\events\EventQueue.java,improvement,feature improvement and remove code,FALSE,remove code because it is a rare case and difficult to monitor,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,refactor test while change in feature implementation subtask for a new feature,RFT-W-FI [by-product],hadoop-ozone,8dd11a15777ec206dbb3889d12bc1e196415f8d6,\hadoop\hadoop-ozone\integration-test\src\test\java\org\apache\hadoop\ozone\client\rpc\TestOzoneRpcClient.java,NA,change in feature implementaiton subtask of new feature,change in feature implementation subtask of new feature,FALSE,refactoring [persists],extract class and pull,FALSE,1,1,0,0,0,1,0,1,0,0,0,0,0,0,0,1,1,1,1,1
hadoop,-,delete 5 test method while fixing a bug,D-W-BF,hadoop-tools,87f63b6479330840e9d708a729355948bb91fd4d,\hadoop\hadoop-tools\hadoop-aws\src\test\java\org\apache\hadoop\fs\s3native\TestS3xLoginHelper.java,\hadoop\hadoop-tools\hadoop-aws\src\main\java\org\apache\hadoop\fs\s3native\S3xLoginHelper.java,bug fixing,bug fixing,FALSE,delete code,-,NA,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0
hadoop,-,refactor @before setup for reuse,RFT-W-BF [by-product],hadoop-hdfs-project,4ea2778acb78f31b470e318d2b65ea43db76909b,\hadoop\hadoop-hdfs-project\hadoop-hdfs\src\test\java\org\apache\hadoop\TestRefreshCallQueue.java,NA,bug fixing from test failure,bug fixing test failure,FALSE,"developer recognizes code duplication in setup, thus extracts parameterized setup method. while doing this remove general fixtures. [intention is different]",-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
hadoop,-,refactor test while improving test [parallizing test],RFT [ parallize test ],hadoop-tools,2d2d97fa7d4224369b3c13bc4a45e8cc9e29afb1,\hadoop\hadoop-tools\hadoop-azure\src\test\java\org\apache\hadoop\fs\azure\TestNativeAzureFileSystemFileNameCheck.java,NA,improvement,parallizing test,FALSE,call setup of superclass,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
wicket,-,reverting,R-W-BF,wicket-devutils,266c90037d689f47bf45722532536716dc9f5b06,\wicket\wicket-devutils\src\test\java\org\apache\wicket\devutils\inspector\SessionSizeModelTest.java,\wicket\wicket-devutils\src\main\java\org\apache\wicket\devutils\inspector\SessionSizeModel.java,reverting due to change in logic,revert to fix faults and improper logic,FALSE,"reverting, which removes code",-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
wicket,-,refactor test code after refactoring production code,RFT-A-RFP,wicket-extensions,a4aed9e35a6055d627960a58eee40e29d84c461d,\wicket\wicket-extensions\src\test\java\org\apache\wicket\extensions\markup\html\form\datetime\DateTimeFieldTest.java,NA,refactoring,refactoring,FALSE,refactoring test code after refactoring production code (restructuring and split logic),extract class,TRUE,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
wicket,-,comment out code due to tediousness of refactoring,C [ can't refactor ],wicket-util,f5f1c2625257adb5f94db81b15bb30acb6d9e813,\wicket\wicket-util\src\test\java\org\apache\wicket\util\convert\converters\ConvertersTest.java,NA,comment out code,comment out code due to tediousness of refactoring,FALSE,comment out,-,NA,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,1
wicket,-,delete code because code doesn't work well...,D [ can't fix test ],wicket-core,f840a2b454d48ad85f66d17c06e4ef11793becfe,\wicket\wicket-core\src\test\java\org\apache\wicket\protocol\http\request\WebClientInfoTest.java,\wicket\wicket-core\src\main\java\org\apache\wicket\protocol\http\request\WebClientInfo.java,delete code,delete code because it doesn't work well,FALSE,delete code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0
cassandra,-,deletes test code while fixing a bug,D-W-BF,test,4a2464192e9e69457f5a5ecf26c094f9298bf069,\cassandra\test\unit\org\apache\cassandra\db\SinglePartitionSliceCommandTest.java,NA,bug,fixing a bug,FALSE,deletes code,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,refactor test case due to change in feature implementation,RFT-W-FI,test,ef5bbedd687d75923e9a20fde9d2f78b4535241d,\cassandra\test\unit\org\apache\cassandra\cache\AutoSavingCacheTest.java,NA,change in implementation,change in implementation,FALSE,refactors test code,"inline method, but deletes some code [dirty]",FALSE,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
cassandra,-,delete test case due to refactoring production code,D-W-RFP,test,cba5d5131e75c0631b2f8845ad63b413ab4f420f,\cassandra\test\unit\org\apache\cassandra\db\compaction\CompactionStrategyManagerTest.java,\cassandra\src\java\org\apache\cassandra\db\compaction\CompactionStrategyManager.java,Refactoring production code,Refactoring production code,FALSE,deletes test code,-,NA,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,replace test code with helper method while adding new feature,RFT-W-FA,test,9343bd4070d69f9c1558656deccfd8e3692c2c80,\cassandra\test\unit\org\apache\cassandra\db\commitlog\SegmentReaderTest.java,NA,new feature,feature implementation,FALSE,replace test code helper method [test smell persists],-,NA,1,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0
cassandra,-,split test case [refactor] while fixing a timeout bug,RFT-W-BF,test,62e46f71903b339d962c4dcb3d2c04991c391a68,\cassandra\test\long\org\apache\cassandra\db\commitlog\CommitLogStressTest.java,NA,bug fixing,split test to avoid timeout,FALSE,turns test into abstract and split it into several components.,-,NA,0,1,0,0,0,0,0,1,1,0,0,0,1,0,0,0,0,0,0,0
cassandra,-,deletes test case while implementing new feature,D-W-FA,test,356dc3c253224751cbf80b32cfce4e3c1640de11,\cassandra\test\unit\org\apache\cassandra\utils\CoalescingStrategiesTest.java,\cassandra\src\java\org\apache\cassandra\utils\CoalescingStrategies.java,new feature,implementing new feature,FALSE,deletes test case,-,NA,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0,0,0,0
cassandra,-,deletes test case while improvement,D-W-FI,test,e645b9172c5d50fc2af407de724e46121edfe109,\cassandra\test\unit\org\apache\cassandra\locator\ReplicaCollectionTest.java,NA,improvement,improvement after a new feature,FALSE,deletes test code,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
cassandra,-,refactor test while fixing bug,RFT-W-BF,test,90fc8969a656b183e81496e479db35f321c8a3aa,\cassandra\test\unit\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSetTest.java,\cassandra\src\java\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSet.java,bug fixing,bug fixing,FALSE,deletes throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,deletes test code while improvement,D-W-FI,test,9308159bc87d29c33e64dbcfcefa948d7f5643dd,\cassandra\test\unit\org\apache\cassandra\repair\StreamingRepairTaskTest.java,\cassandra\src\java\org\apache\cassandra\repair\StreamingRepairTask.java,improvement,improvement after a new feature,FALSE,deletes assertion,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,refactor test code while fixing a bug,RFT-W-BF [by-product],test,0a79f9f5c970dcb8265814cd5dc361eb2d4bec6b,\cassandra\test\unit\org\apache\cassandra\db\repair\PendingAntiCompactionTest.java,\cassandra\src\java\org\apache\cassandra\db\repair\PendingAntiCompaction.java,bug fixing,fixing a bug [must throw exception instead of logging],FALSE,adding new test case contains same functionality as existing one --> refactor,extract abstract class and pull up,TRUE,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,deletes test case while improvement,D-W-FI,test,e645b9172c5d50fc2af407de724e46121edfe109,\cassandra\test\unit\org\apache\cassandra\locator\ReplicaCollectionTest.java,NA,improvement,improvement after a new feature,FALSE,delete,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0
cassandra,-,refactor test while fixing bug,RFT-W-BF,test,90fc8969a656b183e81496e479db35f321c8a3aa,\cassandra\test\unit\org\apache\cassandra\cql3\restrictions\PrimaryKeyRestrictionSetTest.java,NA,bug fixing,bug fixing,FALSE,delete,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,deletes test code while improvement,D-W-FI,test,9308159bc87d29c33e64dbcfcefa948d7f5643dd,\cassandra\test\unit\org\apache\cassandra\repair\StreamingRepairTaskTest.java,NA,improvement,improvement after a new feature,FALSE,delete,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
cassandra,-,refactor test code while fixing a bug,RFT-W-BF,test,0a79f9f5c970dcb8265814cd5dc361eb2d4bec6b,\cassandra\test\unit\org\apache\cassandra\db\repair\PendingAntiCompactionTest.java,NA,bug fixing,fixing a bug [must throw exception instead of logging],FALSE,delete,-,NA,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactoring test code,RFT [ Throws ],src,763de3630829131122fbe565b43ab0616aa60ac7,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\RmicAdvancedTest.java,NA,refactoring,refactoring throws,TRUE,deletes throws,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactoring test code,RFT [ exception catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\InputTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Input.java,refactoring,refactoring throws,FALSE,deletes try and catch,-,NA,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactoring test code,RFT [ exception catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\DeltreeTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Deltree.java,refactoring,refactoring throws,FALSE,deletes try and catch,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0
ant,-,refactorig test code,RFT [ do not fail ],src,8a3b1658ca76b57709b135877bc478fdb041f835,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\TarTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Tar.java,refactoring,refactoring assertions,FALSE,replaces fail with asserttrue,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,migrate to junit3 while migrating to javaddoc.doclient,RFT-W-FI [ byproduct RF ],src,6656db28bb79912ec1c744f34affbda53f86e6fd,\ant\src\tests\junit\org\apache\tools\ant\util\regexp\RegexpMatcherTest.java,NA,improvement,migrating to doclint,TRUE,delete constructor while migrating to junit 3,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,get junit to run with surefire,RFT-W-FI [ byproduct RF ],src,033fac5b47c01fbbd4fbdabb39f930f72e28a4bf,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\optional\junitlauncher\JUnitLauncherTaskTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\optional\junitlauncher\confined\JUnitLauncherTask.java,improvement,using surefire,FALSE,refactoring [test smell persists],extract duplicate method,FALSE,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,0,0,0,1,0
ant,-,migrate to junit3 while migrating to javaddoc.doclient,RFT-W-FI [ byproduct RF ],src,67f29ce0c2ad332570c0a1382c79532cee66dce8,\ant\src\tests\junit\org\apache\tools\ant\util\regexp\RegexpMatcherTest.java,NA,improvement,mgirating to doclint,TRUE,delete constructor while migrating to junit 3,-,NA,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,deprecate custom assert to check expected exception for better option,RFT-W-Deprecation [ exception catch ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\condition\IsReachableTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\condition\IsReachable.java,deprecate and refactor,deprecate and refactor,TRUE,"refactor using thrown.expect. You also end up removing assertion roulette, which originally introduced using fail() in try and assertContain() in catch",-,NA,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ exception catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\optional\JspcTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\optional\jsp\JspC.java,refactor test code,refactor test code,refactor using @ExpectedException,refactor using @ExpectedException,refactor test code,refactor using @ExpectedException,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test,RFT [ array comparison ],src,4b1d9ae3a6bf6ebdec5fd1d6e347da2f286cbb7a,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\ProtectedJarMethodsTest.java,NA,refactor test,refactor test,TRUE,refactor using array.stream,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test [fixtures],"RFT [ Eager Test, Exception Catch, Redundant Assert ]",src,47f8c5d463c59625d5b524143367614325293217,\ant\src\tests\junit\org\apache\tools\ant\types\selectors\TypeSelectorTest.java,\ant\src\main\org\apache\tools\ant\types\selectors\TypeSelector.java,refactor test,refactor test,TRUE,refactoring [test smell removed],Extract method to remove eager test,TRUE,1,0,0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0
ant,-,deprecate custom assert to check expected exception for better option,RFT-W-Deprecation [ assertion ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\SubAntTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\SubAnt.java,deprecate and refactor,deprecate and refactor,TRUE,refactor using thrown.expect,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test,RFT-W-Deprecation [ annotation ],src,bd56d7b9c60bce356ee27a5684f44ff87b68ddb2,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\JarTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Jar.java,refactor test,refactor test code assertions,TRUE,refactor,-,NA,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
ant,-,refactor test,RFT-W-Deprecation [ File Operation ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\CopyTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Copy.java,refactor test,deprecate and refactor,FALSE,refactor,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT-W-Deprecation [ File Operation ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\optional\EchoPropertiesTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\optional\EchoProperties.java,refactor test,deprecate and refactor,FALSE,refactor,-,NA,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\AvailableTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Available.java,remove throw,remove throw,TRUE,remove unused exception,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\types\EnumeratedAttributeTest.java,\ant\src\main\org\apache\tools\ant\types\EnumeratedAttribute.java,remove throw,remove throw,TRUE,remove unused exception,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\ConditionTest.java,NA,remove throw,remove throw,TRUE,remove unused exception,-,NA,1,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\util\VectorSetTest.java,\ant\src\main\org\apache\tools\ant\util\VectorSet.java,remove throw,remove throw,TRUE,remove unused exception,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\CallTargetTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\CallTarget.java,remove throw,remove throw,TRUE,remove unused exception,-,NA,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,deprecate custom assert to check expected exception for better option,RFT-W-Deprecation [ Exception Catch ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\PreSetDefTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\PreSetDef.java,deprecate and refactor,deprecate and refactor,TRUE,"refactor using thrown.expect. You also end up removing assertion roulette, which originally introduced using fail() in try and assertContain() in catch",Test Specific Refactoring,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ External resource ],src,44cb398444c4dab32fa2b0ebb27303f9db605222,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\optional\ReplaceRegExpTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\optional\ReplaceRegExp.java,refactor,refactor test code assertions,FALSE,refactoring using try with resource. Then you won't need conditional to check whether file has been closed,Test Specific Refactoring,TRUE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\TaskdefTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\Taskdef.java,remove throw,remove throw,TRUE,remove unused exception,Test Specific Refactoring,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0
ant,-,remove unused exception,RFT [ Throws ],src,763de3630829131122fbe565b43ab0616aa60ac7,\ant\src\tests\junit\org\example\junitlauncher\vintage\JUnit4SampleTest.java,NA,remove throw,remove throw,TRUE,remove unused exception,Test Specific Refactoring,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,deprecate custom assert to check expected exception for better option,RFT-W-Deprecation [ Exception catch ],src,81c3e6e3ddf5b1ef4e66018f1047e1b2ae8b3173,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\optional\depend\DependTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\optional\depend\Depend.java,deprecate and refactor,deprecate and refactor,TRUE,refactor using thrown.expect,Test Specific Refactoring,TRUE,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0
ant,-,refactor test code,RFT [ Exception Catch ],src,ad98e27d0caff44ec10b16b8eed07e9c4264898f,\ant\src\tests\junit\org\apache\tools\ant\taskdefs\GUnzipTest.java,\ant\src\main\org\apache\tools\ant\taskdefs\GUnzip.java,refactor test code,refactor test code,TRUE,refactor using @ExpectedException,refactor test code,true NA refactor using @ExpectedException,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0
ant,-,refactor test code,RFT [ assertion ],src,97080ce1dbfc2c1d1f8570851389b85fb9a0a8ff,\ant\src\tests\junit\org\apache\tools\ant\types\optional\depend\ClassFileSetTest.java,\ant\src\main\org\apache\tools\ant\types\optional\depend\ClassfileSet.java,refactor test code,refactor test code,FALSE,refactoring [test smell persists],extract duplicate method,TRUE,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0